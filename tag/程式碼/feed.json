{
    "version": "https://jsonfeed.org/version/1",
    "title": "minz的筆記本 • All posts by \"程式碼\" tag",
    "description": "~~~~~~~",
    "home_page_url": "https://blog.minz.li",
    "items": [
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E4%BA%8C%E5%85%83%E6%90%9C%E5%B0%8B%E6%A8%B9/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E4%BA%8C%E5%85%83%E6%90%9C%E5%B0%8B%E6%A8%B9/",
            "title": "二元搜尋樹",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"binary-search-tree\"><a class=\"anchor\" href=\"#binary-search-tree\">#</a> Binary Search Tree</h1>\n<figure class=\"highlight c++\"><figcaption><span>二元搜尋樹</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定義二元搜尋樹的節點結構</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> data;</span><br><span class=\"line\">    Node* left;</span><br><span class=\"line\">    Node* right;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 節點的建構函式</span></span><br><span class=\"line\">    <span class=\"built_in\">Node</span>(<span class=\"type\">int</span> value) &#123;</span><br><span class=\"line\">        data = value;</span><br><span class=\"line\">        left = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">        right = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 搜尋操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">search</span><span class=\"params\">(Node* root, <span class=\"type\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 若樹為空或找到了目標值，則返回 true</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root == <span class=\"literal\">nullptr</span> || root-&gt;data == value) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 若目標值比根節點的值小，則在左子樹中搜尋</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value &lt; root-&gt;data) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">search</span>(root-&gt;left, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 若目標值比根節點的值大，則在右子樹中搜尋</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">search</span>(root-&gt;right, value);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 插入操作</span></span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">insert</span><span class=\"params\">(Node* root, <span class=\"type\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 若樹為空，則創建一個新節點並返回</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root == <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Node</span>(value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 若目標值比根節點的值小，則插入左子樹中</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value &lt; root-&gt;data) &#123;</span><br><span class=\"line\">        root-&gt;left = <span class=\"built_in\">insert</span>(root-&gt;left, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 若目標值比根節點的值大，則插入右子樹中</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value &gt; root-&gt;data) &#123;</span><br><span class=\"line\">        root-&gt;right = <span class=\"built_in\">insert</span>(root-&gt;right, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 返回根節點</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 刪除操作</span></span><br><span class=\"line\"><span class=\"function\">Node* <span class=\"title\">remove</span><span class=\"params\">(Node* root, <span class=\"type\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 若樹為空，則返回空指針</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root == <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 若目標值比根節點的值小，則在左子樹中刪除</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value &lt; root-&gt;data) &#123;</span><br><span class=\"line\">        root-&gt;left = <span class=\"built_in\">remove</span>(root-&gt;left, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 若目標值比根節點的值大，則在右子樹中刪除</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value &gt; root-&gt;data) &#123;</span><br><span class=\"line\">        root-&gt;right = <span class=\"built_in\">remove</span>(root-&gt;right, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 若找到了目標值</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 情況1：沒有子節點或只有一個子節點</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root-&gt;left == <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">            Node* temp = root-&gt;right;</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> root;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (root-&gt;right == <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">            Node* temp = root-&gt;left;</span><br><span class=\"line\">            <span class=\"keyword\">delete</span> root;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 情況2：有兩個子節點</span></span><br><span class=\"line\">        <span class=\"comment\">// 找到右子樹中的最小值節點</span></span><br><span class=\"line\">        Node* minNode = root-&gt;right;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (minNode-&gt;left != <span class=\"literal\">nullptr</span>) &#123;</span><br><span class=\"line\">            minNode = minNode-&gt;left;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 複製最小值到目標節點</span></span><br><span class=\"line\">        root-&gt;data = minNode-&gt;data;</span><br><span class=\"line\">        <span class=\"comment\">// 在右子樹中刪除最小值節點</span></span><br><span class=\"line\">        root-&gt;right = <span class=\"built_in\">remove</span>(root-&gt;right, minNode-&gt;data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 返回修改後的根節點</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 測試程式碼</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 建立一個二元搜尋樹</span></span><br><span class=\"line\">    Node* root = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">    root = <span class=\"built_in\">insert</span>(root, <span class=\"number\">50</span>);</span><br><span class=\"line\">    root = <span class=\"built_in\">insert</span>(root, <span class=\"number\">30</span>);</span><br><span class=\"line\">    root = <span class=\"built_in\">insert</span>(root, <span class=\"number\">20</span>);</span><br><span class=\"line\">    root = <span class=\"built_in\">insert</span>(root, <span class=\"number\">40</span>);</span><br><span class=\"line\">    root = <span class=\"built_in\">insert</span>(root, <span class=\"number\">70</span>);</span><br><span class=\"line\">    root = <span class=\"built_in\">insert</span>(root, <span class=\"number\">60</span>);</span><br><span class=\"line\">    root= <span class=\"built_in\">insert</span>(root, <span class=\"number\">80</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 搜尋值 40</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">search</span>(root, <span class=\"number\">40</span>)) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;搜尋到值 40&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;未找到值 40&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 刪除值 30</span></span><br><span class=\"line\">    root = <span class=\"built_in\">remove</span>(root, <span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 搜尋值 30</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">search</span>(root, <span class=\"number\">30</span>)) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;搜尋到值 30&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;未找到值 30&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>我們使用  <code>struct</code>  定義了二元搜尋樹的節點結構，每個節點包含一個整數數據、左子樹指針和右子樹指針。</p>\n<p><code>search</code>  函式實現了搜尋操作。它遞迴地在二元搜尋樹中搜尋目標值，若樹為空或找到了目標值則返回  <code>true</code> ，否則根據目標值與根節點數據的比較結果遞迴地在左子樹或右子樹中搜尋。</p>\n<p><code>insert</code>  函式實現了插入操作。它遞迴地在二元搜尋樹中找到合適的位置插入新節點，若樹為空則創建一個新節點，否則根據目標值與根節點數據的比較結果遞迴地在左子樹或右子樹中插入。</p>\n<p><code>remove</code>  函式實現了刪除操作。它遞迴地在二元搜尋樹中找到目標值所在的節點，並根據不同情況進行刪除。若目標節點沒有子節點或只有一個子節點，則直接刪除該節點並返回相應的子節點。若目標節點有兩個子節點，則找到右子樹中的最小值節點，將最小值複製到目標節點，然後在右子樹中刪除最小值節點。</p>\n<p>在  <code>main</code>  函式中，我們插入了一些節點，然後使用  <code>search</code>  函式搜尋值 40，並根據結果輸出相應的訊息。<br />\n接著，我們刪除值 30 的節點，再次使用  <code>search</code>  函式搜尋值 30，並根據結果輸出相應的訊息。</p>\n",
            "tags": [
                "程式碼"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E6%8E%92%E5%BA%8F%E6%BC%94%E7%AE%97%E6%B3%95/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E6%8E%92%E5%BA%8F%E6%BC%94%E7%AE%97%E6%B3%95/",
            "title": "排序演算法",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<ul>\n<li>stable sorting : 相同的值排序後順序皆一樣</li>\n<li>unstable sorting : 相同的值排序後順序可能會不一樣</li>\n</ul>\n<h1 id=\"初階排序\"><a class=\"anchor\" href=\"#初階排序\">#</a> 初階排序</h1>\n<figure class=\"highlight c++\"><figcaption><span>排序演算法</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Bubble Sort mark:3-4</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">bubbleSort</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n = arr.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n - i - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[j] &gt; arr[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">swap</span>(arr[j], arr[j + <span class=\"number\">1</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Selection Sort</span></span><br><span class=\"line\"><span class=\"comment\">// 1. 先選這輪的最小</span></span><br><span class=\"line\"><span class=\"comment\">// 2. 跟i交換</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">selectionSort</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n = arr.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> minIndex = i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arr[j] &lt; arr[minIndex]) &#123;</span><br><span class=\"line\">                minIndex = j; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">swap</span>(arr[i], arr[minIndex]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Insertion Sort</span></span><br><span class=\"line\"><span class=\"comment\">// 1. 依序給這一輪的value</span></span><br><span class=\"line\"><span class=\"comment\">// 2. value跟前面的比</span></span><br><span class=\"line\"><span class=\"comment\">// 3. 放到完成的位置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insertionSort</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n = arr.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> key = arr[i];</span><br><span class=\"line\">        <span class=\"type\">int</span> j = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &gt;= <span class=\"number\">0</span> &amp;&amp; arr[j] &gt; key) &#123;</span><br><span class=\"line\">            arr[j + <span class=\"number\">1</span>] = arr[j];</span><br><span class=\"line\">            j--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arr[j + <span class=\"number\">1</span>] = key;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; arr = &#123;<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Bubble Sort</span></span><br><span class=\"line\">    <span class=\"built_in\">bubbleSort</span>(arr);</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Bubble Sort: &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : arr) &#123;</span><br><span class=\"line\">        cout &lt;&lt; num &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Selection Sort</span></span><br><span class=\"line\">    arr = &#123;<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">selectionSort</span>(arr);</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Selection Sort: &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : arr) &#123;</span><br><span class=\"line\">        cout &lt;&lt; num &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Insertion Sort</span></span><br><span class=\"line\">    arr = &#123;<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">insertionSort</span>(arr);</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Insertion Sort: &quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : arr) &#123;</span><br><span class=\"line\">        cout &lt;&lt; num &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"quick-sort\"><a class=\"anchor\" href=\"#quick-sort\">#</a> Quick sort</h1>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 快速排序 (Quick Sort)</span></span><br><span class=\"line\"><span class=\"comment\">// 最壞情況時間複雜度：O(n^2)</span></span><br><span class=\"line\"><span class=\"comment\">// 平均情況時間複雜度：O(nlogn)</span></span><br><span class=\"line\"><span class=\"comment\">// 最佳情況時間複雜度：O(nlogn)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">partition</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr, <span class=\"type\">int</span> low, <span class=\"type\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> pivot = arr[high]; <span class=\"comment\">// 選擇最後一個元素作為主元</span></span><br><span class=\"line\">    <span class=\"type\">int</span> i = low - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = low; j &lt; high; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[j] &lt; pivot) &#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"built_in\">swap</span>(arr[i], arr[j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">swap</span>(arr[i + <span class=\"number\">1</span>], arr[high]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; arr, <span class=\"type\">int</span> low, <span class=\"type\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (low &lt; high) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> pivotIndex = <span class=\"built_in\">partition</span>(arr, low, high);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 遞迴地對分割後的子陣列進行排序</span></span><br><span class=\"line\">        <span class=\"built_in\">quickSort</span>(arr, low, pivotIndex - <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"built_in\">quickSort</span>(arr, pivotIndex + <span class=\"number\">1</span>, high);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; arr = &#123;<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 快速排序</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;快速排序結果：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"built_in\">quickSort</span>(arr, <span class=\"number\">0</span>, arr.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : arr) &#123;</span><br><span class=\"line\">        cout &lt;&lt; num &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在快速排序中，我們使用  <code>partition</code>  函式將陣列分割為比主元小和比主元大的兩個子陣列。<br />\n然後，我們遞迴地對這兩個子陣列進行排序，直到排序完成。</p>\n",
            "tags": [
                "程式碼"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E7%9F%A9%E9%99%A3%E9%A1%8C%E7%9B%AE/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E7%9F%A9%E9%99%A3%E9%A1%8C%E7%9B%AE/",
            "title": "矩陣程式題目",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"找出矩陣中第二大的數字\"><a class=\"anchor\" href=\"#找出矩陣中第二大的數字\">#</a> 找出矩陣中第二大的數字</h1>\n<figure class=\"highlight c++\"><figcaption><span>找出矩陣中第二大的數字</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;climits&gt;</span> <span class=\"comment\">// 包含 INT_MIN 的定義</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">findSecondLargest</span><span class=\"params\">(<span class=\"type\">const</span> vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> largest = INT_MIN; <span class=\"comment\">// 最大數字</span></span><br><span class=\"line\">    <span class=\"type\">int</span> secondLargest = INT_MIN; <span class=\"comment\">// 第二大數字</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍歷矩陣，找出最大數字和第二大數字</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; row : matrix) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : row) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num &gt; largest) &#123;</span><br><span class=\"line\">                secondLargest = largest;</span><br><span class=\"line\">                largest = num;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (num &gt; secondLargest &amp;&amp; num &lt; largest) &#123;</span><br><span class=\"line\">                secondLargest = num;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> secondLargest;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 定義矩陣</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; matrix = &#123;</span><br><span class=\"line\">        &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">7</span>, <span class=\"number\">10</span>, <span class=\"number\">9</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 呼叫函式找出第二大的數字</span></span><br><span class=\"line\">    <span class=\"type\">int</span> secondLargest = <span class=\"built_in\">findSecondLargest</span>(matrix);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出結果</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (secondLargest != INT_MIN) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;矩陣中第二大的數字為: &quot;</span> &lt;&lt; secondLargest &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;矩陣中沒有第二大的數字&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"轉置矩陣\"><a class=\"anchor\" href=\"#轉置矩陣\">#</a> 轉置矩陣</h1>\n<figure class=\"highlight c++\"><figcaption><span>轉置矩陣</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> MAX_SIZE = <span class=\"number\">100</span>;  <span class=\"comment\">// 定義矩陣的最大大小</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函數：計算矩陣的轉置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">transposeMatrix</span><span class=\"params\">(<span class=\"type\">int</span> matrix[][MAX_SIZE], <span class=\"type\">int</span> rows, <span class=\"type\">int</span> cols)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> transposedMatrix[MAX_SIZE][MAX_SIZE];  <span class=\"comment\">// 用於儲存轉置後的矩陣</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍歷矩陣元素，進行轉置</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; rows; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; cols; j++) &#123;</span><br><span class=\"line\">            transposedMatrix[j][i] = matrix[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 列印轉置後的矩陣</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;轉置矩陣：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; cols; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; rows; j++) &#123;</span><br><span class=\"line\">            cout &lt;&lt; transposedMatrix[i][j] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> matrix[MAX_SIZE][MAX_SIZE];  <span class=\"comment\">// 定義原始矩陣</span></span><br><span class=\"line\">    <span class=\"type\">int</span> rows, cols;  <span class=\"comment\">// 矩陣的行數和列數</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸入矩陣的行數和列數</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入矩陣的行數：&quot;</span>;</span><br><span class=\"line\">    cin &gt;&gt; rows;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入矩陣的列數：&quot;</span>;</span><br><span class=\"line\">    cin &gt;&gt; cols;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸入矩陣元素</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入矩陣的元素：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; rows; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; cols; j++) &#123;</span><br><span class=\"line\">            cin &gt;&gt; matrix[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 調用函數計算矩陣的轉置</span></span><br><span class=\"line\">    <span class=\"built_in\">transposeMatrix</span>(matrix, rows, cols);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"兩個矩陣相乘\"><a class=\"anchor\" href=\"#兩個矩陣相乘\">#</a> 兩個矩陣相乘</h1>\n<figure class=\"highlight c++\"><figcaption><span>兩個矩陣相乘</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函式：矩陣相乘</span></span><br><span class=\"line\">vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">matrixMultiply</span>(<span class=\"type\">const</span> vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; matrix1, <span class=\"type\">const</span> vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; matrix2) &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> rows1 = matrix1.<span class=\"built_in\">size</span>();    <span class=\"comment\">// 矩陣1的列數</span></span><br><span class=\"line\">    <span class=\"type\">int</span> cols1 = matrix1[<span class=\"number\">0</span>].<span class=\"built_in\">size</span>(); <span class=\"comment\">// 矩陣1的行數（矩陣2的列數）</span></span><br><span class=\"line\">    <span class=\"type\">int</span> cols2 = matrix2[<span class=\"number\">0</span>].<span class=\"built_in\">size</span>(); <span class=\"comment\">// 矩陣2的行數</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 建立結果矩陣，初始化為全0</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; <span class=\"built_in\">result</span>(rows1, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(cols2, <span class=\"number\">0</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 進行矩陣相乘運算</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; rows1; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; cols2; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; cols1; k++) &#123;</span><br><span class=\"line\">                result[i][j] += matrix1[i][k] * matrix2[k][j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 定義兩個矩陣</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; matrix1 = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>&#125;, &#123;<span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;&#125;;</span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; matrix2 = &#123;&#123;<span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;, &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 呼叫矩陣相乘函式</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; result = <span class=\"built_in\">matrixMultiply</span>(matrix1, matrix2);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出結果矩陣</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;矩陣相乘的結果：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; row : result) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">const</span> <span class=\"keyword\">auto</span>&amp; element : row) &#123;</span><br><span class=\"line\">            cout &lt;&lt; element &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"矩陣乘向量\"><a class=\"anchor\" href=\"#矩陣乘向量\">#</a> 矩陣乘向量</h1>\n<figure class=\"highlight c++\"><figcaption><span>矩陣乘向量</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 計算矩陣與向量的乘積</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">double</span>&gt; <span class=\"title\">matrixVectorMultiply</span><span class=\"params\">(<span class=\"type\">const</span> vector&lt;vector&lt;<span class=\"type\">double</span>&gt;&gt;&amp; matrix, <span class=\"type\">const</span> vector&lt;<span class=\"type\">double</span>&gt;&amp; vector)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> rows = matrix.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"type\">int</span> cols = matrix[<span class=\"number\">0</span>].<span class=\"built_in\">size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 檢查矩陣與向量的尺寸是否符合乘法規則</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cols != vector.<span class=\"built_in\">size</span>()) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;矩陣與向量的尺寸不符合乘法規則&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">vector</span>&lt;<span class=\"type\">double</span>&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 創建結果向量，初始化為零</span></span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">double</span>&gt; <span class=\"title\">result</span><span class=\"params\">(rows, <span class=\"number\">0.0</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 進行矩陣與向量的乘法</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; rows; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; cols; j++) &#123;</span><br><span class=\"line\">            result[i] += matrix[i][j] * vector[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 測試程式碼</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 定義矩陣</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">double</span>&gt;&gt; matrix = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">                                     &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;,</span><br><span class=\"line\">                                     &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 定義向量</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">double</span>&gt; vector = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 計算矩陣與向量的乘積</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">double</span>&gt; result = <span class=\"built_in\">matrixVectorMultiply</span>(matrix, vector);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 輸出結果</span></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;乘積結果：&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">double</span> value : result) &#123;</span><br><span class=\"line\">        cout &lt;&lt; value &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": [
                "程式碼"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E9%A1%8C%E7%9B%AE/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E9%A1%8C%E7%9B%AE/",
            "title": "程式題目",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"印星星\"><a class=\"anchor\" href=\"#印星星\">#</a> 印星星</h1>\n<figure class=\"highlight c++\"><figcaption><span>印星星</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printUpperTriangle</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;* &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printLowerTriangle</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = n; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;* &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入行數: &quot;</span>;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;上三角形：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"built_in\">printUpperTriangle</span>(n);</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;下三角形：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"built_in\">printLowerTriangle</span>(n);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"用遞迴寫階乘\"><a class=\"anchor\" href=\"#用遞迴寫階乘\">#</a> 用遞迴寫階乘</h1>\n<figure class=\"highlight c++\"><figcaption><span>用遞迴寫階乘</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定義遞迴函式計算階乘</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">factorial</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Base case: 當 n 為 0 或 1 時，階乘為 1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span> || n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 遞迴呼叫：將問題分解為較小的子問題</span></span><br><span class=\"line\">    <span class=\"comment\">// 階乘 n 可以表示為 n 乘上 (n-1) 的階乘</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> n * <span class=\"built_in\">factorial</span>(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> num;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入一個正整數: &quot;</span>;</span><br><span class=\"line\">    cin &gt;&gt; num;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 呼叫遞迴函式計算階乘</span></span><br><span class=\"line\">    <span class=\"type\">int</span> result = <span class=\"built_in\">factorial</span>(num);</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; num &lt;&lt; <span class=\"string\">&quot; 的階乘是: &quot;</span> &lt;&lt; result &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"找出陣列中第二大的數字\"><a class=\"anchor\" href=\"#找出陣列中第二大的數字\">#</a> 找出陣列中第二大的數字</h1>\n<figure class=\"highlight c++\"><figcaption><span>找出陣列中第二大的數字</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">findSecondLargest</span><span class=\"params\">(<span class=\"type\">int</span> arr[], <span class=\"type\">int</span> size)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> largest = INT_MIN;  <span class=\"comment\">// 初始化最大值為int類型的最小值</span></span><br><span class=\"line\">    <span class=\"type\">int</span> secondLargest = INT_MIN;  <span class=\"comment\">// 初始化第二大值為int類型的最小值</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍歷數組，更新最大值和第二大值</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; size; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr[i] &gt; largest) &#123;</span><br><span class=\"line\">            secondLargest = largest;</span><br><span class=\"line\">            largest = arr[i];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arr[i] &gt; secondLargest &amp;&amp; arr[i] != largest) &#123;</span><br><span class=\"line\">            secondLargest = arr[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> secondLargest;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> arr[] = &#123;<span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>&#125;;  <span class=\"comment\">// 範例數組</span></span><br><span class=\"line\">    <span class=\"type\">int</span> size = <span class=\"built_in\">sizeof</span>(arr) / <span class=\"built_in\">sizeof</span>(arr[<span class=\"number\">0</span>]);  <span class=\"comment\">// 計算數組大小</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 調用函數找到第二大的數</span></span><br><span class=\"line\">    <span class=\"type\">int</span> secondLargest = <span class=\"built_in\">findSecondLargest</span>(arr, size);</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;第二大的數字是: &quot;</span> &lt;&lt; secondLargest &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"給定一數字找出因數\"><a class=\"anchor\" href=\"#給定一數字找出因數\">#</a> 給定一數字，找出因數</h1>\n<figure class=\"highlight c++\"><figcaption><span>給定一數字，找出因數</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 找出給定數字的因數</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">findFactors</span><span class=\"params\">(<span class=\"type\">int</span> num)</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; factors;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 從 1 開始遍歷到 num 的平方根</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i * i &lt;= num; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num % i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            factors.<span class=\"built_in\">push_back</span>(i); <span class=\"comment\">// 將因數 i 加入 factors</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i != num / i) &#123;</span><br><span class=\"line\">                factors.<span class=\"built_in\">push_back</span>(num / i); <span class=\"comment\">// 將因數 num/i 加入 factors</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> factors;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> num;</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入一個正整數：&quot;</span>;</span><br><span class=\"line\">    cin &gt;&gt; num;</span><br><span class=\"line\"></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; factors = <span class=\"built_in\">findFactors</span>(num);</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; num &lt;&lt; <span class=\"string\">&quot; 的因數有：&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> factor : factors) &#123;</span><br><span class=\"line\">        cout &lt;&lt; factor &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"判斷質數\"><a class=\"anchor\" href=\"#判斷質數\">#</a> 判斷質數</h1>\n<figure class=\"highlight c++\"><figcaption><span>判斷質數</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判斷一個數字是否為質數</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isPrime</span><span class=\"params\">(<span class=\"type\">int</span> number)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 負數和小於等於 1 的數字不是質數</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (number &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用平方根的方法進行質數判斷</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果一個數字 n 是合數（非質數）</span></span><br><span class=\"line\">    <span class=\"comment\">// 那麼它必定可以分解為兩個因數 a 和 b</span></span><br><span class=\"line\">    <span class=\"comment\">// 其中 a 和 b 都不大於 sqrt(n)</span></span><br><span class=\"line\">    <span class=\"type\">int</span> sqrtNumber = <span class=\"built_in\">sqrt</span>(number);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= sqrtNumber; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (number % i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果沒有找到能整除 number 的數字，則 number 是質數</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 測試程式碼</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> number;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入一個數字：&quot;</span>;</span><br><span class=\"line\">    cin &gt;&gt; number;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 呼叫 isPrime 函式判斷是否為質數</span></span><br><span class=\"line\">    <span class=\"type\">bool</span> result = <span class=\"built_in\">isPrime</span>(number);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根據結果輸出訊息</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (result) &#123;</span><br><span class=\"line\">        cout &lt;&lt; number &lt;&lt; <span class=\"string\">&quot; 是質數&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        cout &lt;&lt; number &lt;&lt; <span class=\"string\">&quot; 不是質數&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"判斷子字串\"><a class=\"anchor\" href=\"#判斷子字串\">#</a> 判斷子字串</h1>\n<figure class=\"highlight c++\"><figcaption><span>判斷子字串</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判斷一個字串是否為另一個字串的子字串</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isSubstring</span><span class=\"params\">(<span class=\"type\">const</span> string&amp; str, <span class=\"type\">const</span> string&amp; substring)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果子字串長度大於原始字串，則直接返回 false</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (substring.<span class=\"built_in\">length</span>() &gt; str.<span class=\"built_in\">length</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 遍歷原始字串，逐個比較字元</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">size_t</span> i = <span class=\"number\">0</span>; i &lt;= str.<span class=\"built_in\">length</span>() - substring.<span class=\"built_in\">length</span>(); i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">bool</span> isMatch = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 檢查子字串是否匹配</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">size_t</span> j = <span class=\"number\">0</span>; j &lt; substring.<span class=\"built_in\">length</span>(); j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str[i + j] != substring[j]) &#123;</span><br><span class=\"line\">                isMatch = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 如果子字串匹配，則返回 true</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isMatch) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 沒有找到匹配的子字串，返回 false</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 測試程式碼</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    string str, substring;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入一個字串：&quot;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, str);</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;請輸入一個子字串：&quot;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, substring);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 呼叫 isSubstring 函式判斷是否為子字串</span></span><br><span class=\"line\">    <span class=\"type\">bool</span> result = <span class=\"built_in\">isSubstring</span>(str, substring);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 根據結果輸出訊息</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (result) &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;\\\\&quot;</span><span class=\"string\">&quot; &lt;&lt; substring &lt;&lt; &quot;</span>\\\\<span class=\"string\">&quot; 是 \\\\&quot;</span><span class=\"string\">&quot; &lt;&lt; str &lt;&lt; &quot;</span>\\\\<span class=\"string\">&quot; 的子字串&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;\\\\&quot;</span><span class=\"string\">&quot; &lt;&lt; substring &lt;&lt; &quot;</span>\\\\<span class=\"string\">&quot; 不是 \\\\&quot;</span><span class=\"string\">&quot; &lt;&lt; str &lt;&lt; &quot;</span>\\\\<span class=\"string\">&quot; 的子字串&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用迴圈逐個比較字元的方式來實現。</li>\n</ul>\n<ol>\n<li>\n<p>檢查子字串的長度是否大於原始字串的長度，如果是，則直接返回 false，因為子字串不可能是原始字串的子字串。</p>\n</li>\n<li>\n<p>使用兩個嵌套的迴圈。外層迴圈遍歷原始字串，內層迴圈檢查從當前位置開始的子字串是否匹配。如果在內層迴圈中找到了不匹配的字元，則設置  <code>isMatch</code>  為 false，並且跳出內層迴圈。</p>\n</li>\n</ol>\n",
            "tags": [
                "程式碼"
            ]
        }
    ]
}