<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>minz的筆記本 • Posts by &#34;物件導向&#34; tag</title>
        <link>https://blog.minz.li</link>
        <description>~~~~~~~</description>
        <language>zh-TW</language>
        <pubDate>Wed, 01 Nov 2023 16:00:00 +0000</pubDate>
        <lastBuildDate>Wed, 01 Nov 2023 16:00:00 +0000</lastBuildDate>
        <category>ShokaX主題</category>
        <category>物件導向</category>
        <category>程式碼</category>
        <category>大學課程</category>
        <category>機率與統計</category>
        <category>演算法</category>
        <category>線性代數</category>
        <category>資料結構</category>
        <category>離散數學</category>
        <item>
            <guid isPermalink="true">https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/OOP/</guid>
            <title>物件導向傳值?傳參考?</title>
            <link>https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/OOP/</link>
            <category>物件導向</category>
            <pubDate>Wed, 01 Nov 2023 16:00:00 +0000</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;call-by-value-傳值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#call-by-value-傳值&#34;&gt;#&lt;/a&gt; call by value (傳值)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在 Call-by-Value 中，函式的參數是被傳遞值的&lt;strong&gt;副本&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在函式內部，對參數的修改不會影響到原始的變數。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;h3 id=&#34;call-by-address-傳位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#call-by-address-傳位置&#34;&gt;#&lt;/a&gt; call by address (傳位置)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;傳了實際的記憶體位置進去 function&lt;/li&gt;
&lt;li&gt;也是 &lt;code&gt;call by value&lt;/code&gt;  的變形，改為&lt;strong&gt;傳記憶體位址&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id=&#34;call-by-reference-傳參考&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#call-by-reference-傳參考&#34;&gt;#&lt;/a&gt; call by reference (傳參考)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在 Call-by-Reference 中，函式的參數接受原始變數的參考（或記憶體位置）。&lt;/li&gt;
&lt;li&gt;在函式內部，對參數的修改會直接影響到原始的變數。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-C++&#34;&gt;#include &amp;lt;iostream&amp;gt;

// Call-by-Value (值傳遞)
void incrementByValue(int value) &amp;#123;
    value++;
&amp;#125;

// Call-by-Reference using pointer (指標參考傳遞)
void incrementByPointer(int* ptr) &amp;#123;
    (*ptr)++;
&amp;#125;

// Call-by-Reference using reference (參考傳遞)
void incrementByReference(int&amp;amp; ref) &amp;#123;
    ref++;
&amp;#125;

int main() &amp;#123;
    int num = 10;

    incrementByValue(num);        // 傳遞值
    std::cout &amp;lt;&amp;lt; &amp;quot;Call-by-Value: &amp;quot; &amp;lt;&amp;lt; num &amp;lt;&amp;lt; std::endl;  // 輸出：10

    incrementByPointer(&amp;amp;num);     // 傳遞指標參考
    std::cout &amp;lt;&amp;lt; &amp;quot;Call-by-Pointer: &amp;quot; &amp;lt;&amp;lt; num &amp;lt;&amp;lt; std::endl; // 輸出：11

    incrementByReference(num);    // 傳遞參考
    std::cout &amp;lt;&amp;lt; &amp;quot;Call-by-Reference: &amp;quot; &amp;lt;&amp;lt; num &amp;lt;&amp;lt; std::endl; // 輸出：12

    return 0;
&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;傳值&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;傳地址&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;傳參考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;incrementByValue&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;incrementByPointer&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;incrementByReference&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;傳入函式的東西&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;整數值&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;整數指標 (指標變數)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;整數引用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;原始的 &lt;code&gt;num&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;不影響 (因為是副本)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;會影響&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;會影響&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
 ]]></description>
        </item>
    </channel>
</rss>
