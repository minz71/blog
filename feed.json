{
    "version": "https://jsonfeed.org/version/1",
    "title": "minz的筆記本",
    "description": "",
    "home_page_url": "https://blog.minz.li",
    "items": [
        {
            "id": "https://blog.minz.li/AI/AI-Accelerators/",
            "url": "https://blog.minz.li/AI/AI-Accelerators/",
            "title": "超越 GPU 在 Groq/Cerebras/SambaNova 使用高速輸出的 Deepseek",
            "date_published": "2025-02-19T16:00:00.000Z",
            "content_html": "<h1 id=\"groq-介紹\"><a class=\"anchor\" href=\"#groq-介紹\">#</a> Groq 介紹</h1>\n<p>Groq 的主要產品是 LPU (Language Processing Units)，能夠大幅提升模型的推論速度，這表示模型回答的速度加快，比 GPT-4o 快了數倍。<br />\nGroq 的 實驗性模型  <code>llama-3.3-70b-specdec</code>  在 GroqCloud 上的推論速度最快可以達到 <a href=\"https://groq.com/groq-first-generation-14nm-chip-just-got-a-6x-speed-boost-introducing-llama-3-1-70b-speculative-decoding-on-groqcloud/\">1,660 tokens/s</a> 。</p>\n<ul>\n<li>低延遲 (Seconds to First Token Received)</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://groq.com/wp-content/uploads/2024/11/latency-1536x762.jpg.webp\" alt=\"\" /></p>\n<ul>\n<li>高性能 (High Output Tokens per Second)</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://groq.com/wp-content/uploads/2024/11/output-speed2-1536x762.jpg.webp\" alt=\"\" /></p>\n<h2 id=\"可以使用的-models\"><a class=\"anchor\" href=\"#可以使用的-models\">#</a> 可以使用的 Models</h2>\n<ul>\n<li>可以在 <a href=\"https://console.groq.com/docs/models\">https://console.groq.com/docs/models</a> 查看可以使用的模型</li>\n<li>目前多為 llama、gemma、whisper 系列</li>\n</ul>\n<h2 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h2>\n<p>可以在官方網站 <a href=\"https://groq.com/\">https://groq.com/</a> 或是<a href=\"https://console.groq.com/playground\"> playground</a> 直接使用</p>\n<p><img loading=\"lazy\" data-src=\"/assets/AI/AI-Accelerators/groq_home.webp\" alt=\"\" width=\"80%\" /></p>\n<h2 id=\"api\"><a class=\"anchor\" href=\"#api\">#</a> API</h2>\n<p><a href=\"https://console.groq.com/keys\">https://console.groq.com/keys</a><br />\n 在左邊 API Keys 的選單中點擊 Create API Key，目前免費層級有提供一定的額度使用，API 兼容 openai 格式，修改 base_url 和 model 後可以直接使用。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> openai</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>client <span class=\"token operator\">=</span> openai<span class=\"token punctuation\">.</span>OpenAI<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    base_url<span class=\"token operator\">=</span><span class=\"token string\">\"https://api.groq.com/openai/v1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    api_key<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"GROQ_API_KEY\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"cerebras-介紹\"><a class=\"anchor\" href=\"#cerebras-介紹\">#</a> Cerebras 介紹</h1>\n<p>Cerebras 研發的產品是 Wafer Scale Engine（WSE，晶圓級引擎），是一款 超大型 AI 加速晶片。</p>\n<ul>\n<li><a href=\"https://cerebras.ai/blog/cerebras-launches-worlds-fastest-deepseek-r1-llama-70b-inference\">推理速度</a></li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://cerebras.ai/wp-content/uploads/2025/01/deepseek-chart.png\" alt=\"\" /></p>\n<h2 id=\"可以使用的-models-2\"><a class=\"anchor\" href=\"#可以使用的-models-2\">#</a> 可以使用的 Models</h2>\n<ul>\n<li>可以在 <a href=\"https://inference-docs.cerebras.ai/introduction\">https://inference-docs.cerebras.ai/introduction</a> 查看可以使用的模型</li>\n<li>目前只有 llama 系列</li>\n</ul>\n<h2 id=\"使用-2\"><a class=\"anchor\" href=\"#使用-2\">#</a> 使用</h2>\n<p>可以在首頁<a href=\"https://inference.cerebras.ai/\"> https://inference.cerebras.ai/</a> 直接使用</p>\n<p><img loading=\"lazy\" data-src=\"/assets/AI/AI-Accelerators/cerebras_home.webp\" alt=\"\" width=\"80%\" /></p>\n<h2 id=\"api-2\"><a class=\"anchor\" href=\"#api-2\">#</a> API</h2>\n<p><a href=\"https://cloud.cerebras.ai/platform/\">https://cloud.cerebras.ai/platform/</a><br />\n 首頁右上方點擊 Get API Key，<strong>需要填寫 Google 表單申請</strong>，目前免費層級有提供一定的額度使用，<br />\nAPI 兼容 openai 格式，修改 base_url 為  <code>https://api.cerebras.ai/v1</code>  和  <code>model</code>  後可以直接使用。</p>\n<h1 id=\"sambanova-介紹\"><a class=\"anchor\" href=\"#sambanova-介紹\">#</a> Sambanova 介紹</h1>\n<p>SambaNova 開發的產品是 SN40L ，Reconfigurable Dataflow Unit (RDU)，專為 AI 推理與訓練設計的整合式加速晶片。</p>\n<ul>\n<li>SambaNova 與其他競品的比較</li>\n<li><a href=\"https://sambanova.ai/blog/sn40l-chip-best-inference-solution\">來源</a></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">指標</th>\n<th style=\"text-align:center\">SambaNova SN40L</th>\n<th style=\"text-align:center\">Cerebras WSE-3</th>\n<th style=\"text-align:center\">Groq LPU</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">晶片數（70B 模型）</td>\n<td style=\"text-align:center\">16 晶片</td>\n<td style=\"text-align:center\">336 晶片（4 晶圓）</td>\n<td style=\"text-align:center\">576 晶片</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">算力密度</td>\n<td style=\"text-align:center\">優於 Groq 40 倍 / Cerebras 10 倍</td>\n<td style=\"text-align:center\">高算力但受限於 SRAM 與多晶圓管線並行成本</td>\n<td style=\"text-align:center\">需大量晶片互連以補足 SRAM 容量限制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">記憶體架構</td>\n<td style=\"text-align:center\">SRAM + HBM + DDR</td>\n<td style=\"text-align:center\">全 SRAM</td>\n<td style=\"text-align:center\">全 SRAM</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">量化需求</td>\n<td style=\"text-align:center\">無（16-bit 原生）</td>\n<td style=\"text-align:center\">無（官方宣稱使用 16-bit）</td>\n<td style=\"text-align:center\"><strong>推測</strong>需 int8 量化</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"可以使用的-models-3\"><a class=\"anchor\" href=\"#可以使用的-models-3\">#</a> 可以使用的 Models</h2>\n<ul>\n<li>可以在 <a href=\"https://docs.sambanova.ai/cloud/docs/get-started/supported-models\">https://docs.sambanova.ai/cloud/docs/get-started/supported-models</a> 查看可以使用的模型</li>\n<li>目前只有 DeepSeek、llama、Qwen 系列</li>\n<li>DeepSeek R1 671B 需要填表申請</li>\n</ul>\n<h2 id=\"使用-3\"><a class=\"anchor\" href=\"#使用-3\">#</a> 使用</h2>\n<p>可以在官方網站 <a href=\"https://cloud.sambanova.ai/\">playground</a> 直接使用<br />\n<img loading=\"lazy\" data-src=\"/assets/AI/AI-Accelerators/sambanova_home.webp\" alt=\"\" width=\"80%\" /></p>\n<h2 id=\"api-3\"><a class=\"anchor\" href=\"#api-3\">#</a> API</h2>\n<p><a href=\"https://cloud.sambanova.ai/apis\">https://cloud.sambanova.ai/apis</a><br />\n 在左邊 API Keys 的選單中點擊 Create API Key，目前提供新用戶 5 美元 (3 個月到期)，<br />\nAPI 兼容 openai 格式，修改 base_url 為  <code>https://api.sambanova.ai</code>  和 model 後可以直接使用。</p>\n",
            "tags": [
                "Groq",
                "Cerebras",
                "SambaNova",
                "Deepseek",
                "llama"
            ]
        },
        {
            "id": "https://blog.minz.li/tool/VMware/",
            "url": "https://blog.minz.li/tool/VMware/",
            "title": "VMware Workstation 虛擬機下載",
            "date_published": "2024-11-21T16:00:00.000Z",
            "content_html": "<h1 id=\"介紹\"><a class=\"anchor\" href=\"#介紹\">#</a> 介紹</h1>\n<p>VMware Workstation 是由 VMware 開發的桌面虛擬機軟體，<br />\n博通（Broadcom）於 2023 年 11 月收購 VMware 後，<br />\n於 2024 年 5 月 14 日，<a href=\"https://blogs.vmware.com/workstation/2024/05/vmware-workstation-pro-now-available-free-for-personal-use.html\">宣布</a>將以下虛擬化軟體供免費使用。<br />\n商業使用現在也是<a href=\"https://blogs.vmware.com/cloud-foundation/2024/11/11/vmware-fusion-and-workstation-are-now-free-for-all-users/\">免費</a>。</p>\n<ul>\n<li>VMware Workstation Pro : 支援 Windows 與 Linux</li>\n<li>VMware Fusion Pro : 支援 macOS</li>\n</ul>\n<h1 id=\"下載-vmware\"><a class=\"anchor\" href=\"#下載-vmware\">#</a> 下載 VMware</h1>\n<h2 id=\"直接在檔案server下載\"><a class=\"anchor\" href=\"#直接在檔案server下載\">#</a> 直接在檔案 server 下載</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"VMware Workstation Pro ( Windows 與 Linux )\">\n<p>下載連結: <a href=\"https://softwareupdate.vmware.com/cds/vmw-desktop/ws/\">https://softwareupdate.vmware.com/cds/vmw-desktop/ws/</a></p>\n<ul>\n<li>目前的最新版本是 17.6.1</li>\n</ul>\n<div class=\"note info\">\n<p>選擇版本 &gt; 對應的資料夾 &gt; 選擇系統 (linux/windows) &gt; core &gt; VMware-workstation-17.5.2-23775571.exe.tar</p>\n</div>\n<p>這個是主程式的安裝，tools 的部分到 packages 目錄下載。</p>\n<div class=\"note info\">\n<p>選擇版本 &gt; 對應的資料夾 &gt; 選擇系統 (linux/windows) &gt; packages</p>\n</div>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"VMware Fusion Pro ( macOS )\">\n<p>下載連結: <a href=\"https://softwareupdate.vmware.com/cds/vmw-desktop/fusion/\">https://softwareupdate.vmware.com/cds/vmw-desktop/fusion/</a></p>\n<ul>\n<li>目前的最新版本是 13.6.1</li>\n</ul>\n<div class=\"note info\">\n<p>選擇版本 &gt; 對應的資料夾 &gt; universal &gt; core &gt; com.vmware.fusion.zip.tar</p>\n</div>\n</div>\n<ul>\n<li>將 tar 檔案解壓縮後，會得到安裝程式</li>\n</ul>\n<h2 id=\"broadcom官網\"><a class=\"anchor\" href=\"#broadcom官網\">#</a> Broadcom 官網</h2>\n<ol>\n<li>註冊登入 Broadcom 帳號</li>\n</ol>\n<p><a href=\"https://profile.broadcom.com/web/registration\">https://profile.broadcom.com/web/registration</a></p>\n<ol start=\"2\">\n<li>下載 VMware</li>\n</ol>\n<ul>\n<li>\n<p><a href=\"%22https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Workstation+Pro%22\">VMware Workstation Pro</a></p>\n</li>\n<li>\n<p><a href=\"%22https://support.broadcom.com/group/ecx/productdownloads?subfamily=VMware+Fusion%22\">VMware Fusion Pro</a></p>\n</li>\n</ul>\n<p>以下使用 windows 安裝目前的最新版本 (17.5.2)</p>\n<ol>\n<li>\n<p>點擊下載連結後選擇版本<br />\n<img loading=\"lazy\" data-src=\"/assets/tool/vmware1.webp\" alt=\"\" title=\"選擇版本\" width=\"80%\" /></p>\n</li>\n<li>\n<p>同意條款後，點擊下載<br />\n<img loading=\"lazy\" data-src=\"/assets/tool/vmware2.webp\" alt=\"\" title=\"點擊下載icon\" width=\"80%\" /></p>\n</li>\n<li>\n<p>填寫基本資料，點選 submit 送出<br />\n<img loading=\"lazy\" data-src=\"/assets/tool/vmware3.webp\" alt=\"\" title=\"填寫基本資料\" width=\"80%\" /></p>\n</li>\n<li>\n<p>回到步驟 2 的頁面，點擊下載</p>\n</li>\n</ol>\n<h1 id=\"vmware-tools\"><a class=\"anchor\" href=\"#vmware-tools\">#</a> VMware Tools</h1>\n<p><a href=\"https://knowledge.broadcom.com/external/article/315382/overview-of-vmware-tools.html\">https://knowledge.broadcom.com/external/article/315382/overview-of-vmware-tools.html</a><br />\n 安裝後，虛擬機可以有更流暢的操作體驗，包括：</p>\n<ol>\n<li>滑鼠：提高操作系統中的滑鼠控制。</li>\n<li>時間同步：能夠將操作系統的時間與主機同步。</li>\n<li>改善的用戶體驗：剪貼板共享、拖拽文件、等功能。</li>\n<li>快照功能：能在虛擬機快照時保持操作系統的一致性。</li>\n</ol>\n",
            "tags": [
                "VMware",
                "VMware下載",
                "虛擬機"
            ]
        },
        {
            "id": "https://blog.minz.li/tool/streamMonitor/",
            "url": "https://blog.minz.li/tool/streamMonitor/",
            "title": "免費開源解決方案 將iPad變成電腦第二螢幕",
            "date_published": "2024-10-25T16:00:00.000Z",
            "content_html": "<h1 id=\"介紹\"><a class=\"anchor\" href=\"#介紹\">#</a> 介紹</h1>\n<p>將電腦的畫面串流到平板上顯示，讓平板成為電腦的額外螢幕。<br />\n這個解決方案結合了三個開源軟體，能實現低延遲、高畫質的串流效果。</p>\n<h1 id=\"虛擬螢幕驅動\"><a class=\"anchor\" href=\"#虛擬螢幕驅動\">#</a> 虛擬螢幕驅動</h1>\n<p><a href=\"https://github.com/nomi-san/parsec-vdd\">https://github.com/nomi-san/parsec-vdd</a></p>\n<p>parsec-vdd 可以在你的 Windows 上建立一個虛擬的螢幕。</p>\n<ol>\n<li>\n<p>安裝 Parsec VDD</p>\n<ul>\n<li>在 <a href=\"https://github.com/nomi-san/parsec-vdd/releases\">Gitgub Releases</a> 頁面找到對應的系統版本</li>\n<li>適用於 Windows 的安裝檔案  <code>ParsecVDisplay-v0.45-setup.exe</code></li>\n</ul>\n</li>\n<li>\n<p>設置 Parsec VDD</p>\n<ol>\n<li>在 Custom 添加 iPad 的解析度 (例如 iPad Pro 11&quot; 2388 * 1668)</li>\n<li>點擊 Add Display 添加一個虛擬螢幕</li>\n<li>在螢幕點擊右鍵可以設定解析度等</li>\n<li>在螢幕點擊右鍵找到螢幕的名稱，供後續設定使用，例如:  <code>\\\\.\\DISPLAY21</code> <br />\n<img loading=\"lazy\" data-src=\"/assets/tool/subMonitor/parsecvdd_setting.webp\" alt=\"\" width=\"70%\" /></li>\n</ol>\n</li>\n</ol>\n<h1 id=\"sunshine\"><a class=\"anchor\" href=\"#sunshine\">#</a> Sunshine</h1>\n<p><a href=\"https://github.com/LizardByte/Sunshine\">https://github.com/LizardByte/Sunshine</a></p>\n<p>Sunshine 是一個開源的串流伺服器。</p>\n<ol>\n<li>\n<p>安裝 Sunshine</p>\n<ul>\n<li>在 <a href=\"https://github.com/LizardByte/Sunshine/releases\">Github Releases</a> 頁面找到對應的系統版本</li>\n<li>適用於 Windows 的安裝檔案  <code>sunshine-windows-installer.exe</code></li>\n</ul>\n</li>\n<li>\n<p>設定 Sunshine</p>\n<ol>\n<li>開啟 Sunshine 的 Web UI，<a href=\"http://localhost:47990\">http://localhost:47990</a></li>\n<li>設置使用者名稱與密碼</li>\n<li>設定輸出的螢幕，剛剛設定的虛擬螢幕  <code>\\\\.\\DISPLAY21</code> <br />\n<img loading=\"lazy\" data-src=\"/assets/tool/subMonitor/sunshine_setting.webp\" alt=\"\" width=\"70%\" /></li>\n</ol>\n</li>\n</ol>\n<h1 id=\"moonlight\"><a class=\"anchor\" href=\"#moonlight\">#</a> Moonlight</h1>\n<p><a href=\"https://moonlight-stream.org/\">https://moonlight-stream.org/</a></p>\n<p>Moonlight 是一個用於串流遊戲與桌面的開源專案。</p>\n<p>可以在 <a href=\"https://apps.apple.com/tw/app/moonlight-game-streaming/id1000551566\">App Store</a> 或 <a href=\"https://play.google.com/store/apps/details?id=com.limelight\">Google Play</a> 下載</p>\n<ul>\n<li>IOS 設備在 APP 開啟時需要允許 <code>想要尋找並連接你區域網路上的裝置</code></li>\n<li>點擊右上角的 Setting 可以調整解析度、Frame Rate、關閉虛擬搖桿<br />\n<img loading=\"lazy\" data-src=\"/assets/tool/subMonitor/moonlight_setting.webp\" alt=\"\" width=\"70%\" /></li>\n<li>確保設備與主機在同一網路</li>\n<li>Moonlight 會自動搜索區域網路的伺服器 (如果沒有自動顯示，可以手動輸入主機 IP 地址)</li>\n<li>首次連接時需要在 Sunshine 輸入 pin 配對</li>\n<li>連接成功後即可開始串流</li>\n</ul>\n",
            "tags": [
                "sunshine",
                "Parsec VDD",
                "Moonlight"
            ]
        },
        {
            "id": "https://blog.minz.li/shokaX/ShokaX_github_action/",
            "url": "https://blog.minz.li/shokaX/ShokaX_github_action/",
            "title": "ShokaX 使用 GitHub Actions 自動部署到 Github Page",
            "date_published": "2024-08-09T16:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<ol>\n<li>編輯部落格內容後使用 Git 將更變推送到 Github 私人倉庫</li>\n<li>私人倉庫的 Workflow 會將原始碼 build 成靜態網頁</li>\n<li>將 public 目錄下的檔案 (編譯後的靜態網頁)，推送到公開倉庫</li>\n<li>將這個倉庫設定為 GitHub Page</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/github_action_imagine.webp\" alt=\"\" title=\"流程\" width=\"60%\" /></p>\n<h1 id=\"github-actions-介紹\"><a class=\"anchor\" href=\"#github-actions-介紹\">#</a> GitHub Actions 介紹</h1>\n<p>GitHub Actions 是 GitHub 提供的一項 CI/CD（持續集成和持續部署）服務，讓使用者能夠自動化軟件開發工作流。<br />\n它允許你在特定事件發生時執行定義好的動作，例如程式碼推送、Pull Request 創建、Release 發布等，<br />\n並使用 YAML 文件來定義你的工作流。</p>\n<h1 id=\"github-actions-使用\"><a class=\"anchor\" href=\"#github-actions-使用\">#</a> GitHub Actions 使用</h1>\n<h2 id=\"在-github-setting-產生一個-key\"><a class=\"anchor\" href=\"#在-github-setting-產生一個-key\">#</a> 在 Github Setting 產生一個 Key</h2>\n<ol>\n<li>\n<p>點擊 Developer Settings<br />\n<img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/githubActionGenKey.webp\" alt=\"\" title=\"點擊 Developer Settings\" width=\"80%\" /></p>\n</li>\n<li>\n<p>點擊 Generate new token<br />\n<img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/githubActionGenKey2.webp\" alt=\"\" title=\"點擊 Generate new token\" width=\"80%\" /></p>\n</li>\n<li>\n<p>權限添加 workflow<br />\n<img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/githubActionGenKey3.webp\" alt=\"\" title=\"權限添加 workflow\" width=\"80%\" /></p>\n</li>\n<li>\n<p>回到專案的 repo Setting<br />\n<img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/githubActionSecretKey.webp\" alt=\"\" title=\"回到專案的 repo Setting\" width=\"80%\" /></p>\n</li>\n<li>\n<p>Name 填入自定義名稱， secret 填入 第 <code>3</code>  步產生的 token<br />\n<img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/githubActionSecretKey2.webp\" alt=\"\" title=\"Name 填入自定義名稱， secret 填入 第`3`步產生的 token\" width=\"80%\" /></p>\n</li>\n</ol>\n<h2 id=\"workflow-trigger\"><a class=\"anchor\" href=\"#workflow-trigger\">#</a> Workflow Trigger</h2>\n<p>當有新的提交推送到  <code>main</code>  分支時，這個工作流程會被觸發。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">-</span> main</pre></td></tr></table></figure><h2 id=\"jobs\"><a class=\"anchor\" href=\"#jobs\">#</a> Jobs</h2>\n<p>這個工作流程包含一個名為 build-and-deploy 的作業。<br />\n這個作業在最新版本的 Ubuntu 環境中運行，並設置了 20 分鐘的超時限制。</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">build-and-deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">timeout-minutes</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr></table></figure><h2 id=\"steps\"><a class=\"anchor\" href=\"#steps\">#</a> Steps</h2>\n<ol>\n<li>使用 actions/checkout 來將存儲庫中的所有文件和目錄複製到 GitHub Actions 執行器的工作目錄中。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v4</pre></td></tr></table></figure><ol start=\"2\">\n<li>設置 Node.js 環境，使用版本 18。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set up Node.js</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v4</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>使用 shokax-can</li>\n</ol>\n<ul>\n<li>可以在安裝其他沒有包含在 shokax-can 的 moudle，例如:  <code>hexo-generator-sitemap</code> 。</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> shokax<span class=\"token punctuation\">-</span>can</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    git clone https://github.com/theme-shoka-x/shokax-can --depth=1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cd shokax-can</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    npm install -g pnpm</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    pnpm install</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    pnpm install hexo-generator-sitemap</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>將安裝好的 node_modules 複製到原本的工作目錄</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Copy Modules</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> cp <span class=\"token punctuation\">-</span>r shokax<span class=\"token punctuation\">-</span>can/node_modules node_modules</pre></td></tr></table></figure><ol start=\"5\">\n<li>全局安裝 Hexo CLI。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Hexo CLI</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install <span class=\"token punctuation\">-</span>g hexo<span class=\"token punctuation\">-</span>cli</pre></td></tr></table></figure><ol start=\"6\">\n<li>替換文件 post.js<br />\n 如果對主題原始碼有修改，可以在這邊替換。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> replace</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">working-directory</span><span class=\"token punctuation\">:</span> ./</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cp replace/post.js node_modules/hexo-theme-shokax/source/js/_app/page/post.js</span></pre></td></tr></table></figure><ol start=\"7\">\n<li>Build the Site</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> build</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">working-directory</span><span class=\"token punctuation\">:</span> ./</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    hexo generate</span></pre></td></tr></table></figure><ol start=\"8\">\n<li>使用 Algolia 進行搜索索引。它從 GitHub Secrets 中提取 HEXO_ALGOLIA_INDEXING_KEY。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> algolia</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">working-directory</span><span class=\"token punctuation\">:</span> ./</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    export HEXO_ALGOLIA_INDEXING_KEY=$&#123; &#123; secrets.API_TOKEN_ALGOLIA_INDEXING_KEY &#125;&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    hexo algolia</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">#                                  ^ 去掉這個空格，因為不能正確渲染 2 個括號</span></pre></td></tr></table></figure><ol start=\"9\">\n<li>Push to Another Repository<br />\n 這一步使用 <a href=\"%22https://cpina.github.io/push-to-another-repository-docs/%22\">cpina/github-action-push-to-another-repository</a>，<br />\n將生成的靜態網站文件推送到另一個存儲庫 minz71/minz71.github.io 的 main 分支，以部署到 GitHub Pages。<br />\n並使用 GitHub Secrets 中的 API_TOKEN_GITHUB 來進行身份驗證。</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Pushes to another repository</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> cpina/github<span class=\"token punctuation\">-</span>action<span class=\"token punctuation\">-</span>push<span class=\"token punctuation\">-</span>to<span class=\"token punctuation\">-</span>another<span class=\"token punctuation\">-</span>repository@main</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">API_TOKEN_GITHUB</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#123;</span> secrets.API_TOKEN_GITHUB <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">#                   ^ 去掉這個空格，因為不能正確渲染 2 個括號</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">source-directory</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'./public'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">destination-github-username</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'minz71'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">destination-repository-name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'minz71.github.io'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">user-email</span><span class=\"token punctuation\">:</span> XXX@gmail.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">target-branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure><h1 id=\"workflows-的完整範例\"><a class=\"anchor\" href=\"#workflows-的完整範例\">#</a> Workflows 的完整範例</h1>\n<ul>\n<li>GitHub Actions 的工作流文件在  <code>.github/workflows</code>  目錄中</li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"><span>.github/workflows/deploy.yml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo ShokaX Build and Deploy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> main</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">build-and-deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">timeout-minutes</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout Repository</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v4</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set up Node.js</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v4</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> shokax<span class=\"token punctuation\">-</span>can</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          git clone https://github.com/theme-shoka-x/shokax-can --depth=1</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>          cd shokax-can</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          npm install -g pnpm</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          pnpm install</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          pnpm install hexo-generator-sitemap</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Copy Modules</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> cp <span class=\"token punctuation\">-</span>r shokax<span class=\"token punctuation\">-</span>can/node_modules node_modules</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Hexo CLI</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install <span class=\"token punctuation\">-</span>g hexo<span class=\"token punctuation\">-</span>cli</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token comment\"># - name: replace</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      <span class=\"token comment\">#   working-directory: ./</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token comment\">#   run: |</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      #     cp replace/post.js node_modules/hexo-theme-shokax/source/js/_app/page/post.js</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      - name: build</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        working-directory: ./</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        run: |</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>          hexo generate</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> algolia</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token key atrule\">working-directory</span><span class=\"token punctuation\">:</span> ./</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>          export HEXO_ALGOLIA_INDEXING_KEY=$&#123; &#123; secrets.API_TOKEN_ALGOLIA_INDEXING_KEY &#125;&#125;</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          hexo algolia</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\">#                                    ^ 去掉這個空格，因為不能正確渲染 2 個括號</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Pushes to another repository</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> cpina/github<span class=\"token punctuation\">-</span>action<span class=\"token punctuation\">-</span>push<span class=\"token punctuation\">-</span>to<span class=\"token punctuation\">-</span>another<span class=\"token punctuation\">-</span>repository@main</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>          <span class=\"token key atrule\">API_TOKEN_GITHUB</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#123;</span> secrets.API_TOKEN_GITHUB <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\">#                     ^ 去掉這個空格，因為不能正確渲染 2 個括號</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>          <span class=\"token key atrule\">source-directory</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'./public'</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>          <span class=\"token key atrule\">destination-github-username</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'minz71'</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>          <span class=\"token key atrule\">destination-repository-name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'minz71.github.io'</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>          <span class=\"token key atrule\">user-email</span><span class=\"token punctuation\">:</span> xxx@gmail.com</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>          <span class=\"token key atrule\">target-branch</span><span class=\"token punctuation\">:</span> main</pre></td></tr></table></figure><h1 id=\"設定github-page\"><a class=\"anchor\" href=\"#設定github-page\">#</a> 設定 GitHub Page</h1>\n<ol>\n<li>\n<p>到公開的 Repository &gt; Settings &gt; Page</p>\n</li>\n<li>\n<p>設定 Custom domain (在 DNS 添加 CNAME 紀錄)</p>\n</li>\n</ol>\n",
            "tags": [
                "DevOps",
                "Github Action"
            ]
        },
        {
            "id": "https://blog.minz.li/shokaX/ShokaX_install/",
            "url": "https://blog.minz.li/shokaX/ShokaX_install/",
            "title": "ShokaX 安裝教學",
            "date_published": "2024-08-02T16:00:00.000Z",
            "content_html": "<h1 id=\"介紹\"><a class=\"anchor\" href=\"#介紹\">#</a> 介紹</h1>\n<ul>\n<li>\n<p>Hexo 是一個部落格框架，可以生成靜態網頁。</p>\n</li>\n<li>\n<p>Shoka</p>\n</li>\n</ul>\n<p>是一個 Hexo 主題，Shoka 取的名字是 <code>書架</code> ，是一個為了閱讀筆記而生的主題，<br />\n相關介紹可以參考作者網站：<a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/\">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/</a></p>\n<div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><a href=\"https://shoka.lostyu.me\" class=\"image\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></a>\n        <div class=\"info\">\n        <a href=\"https://shoka.lostyu.me\" class=\"title\">優萌初華</a>\n        <p class=\"desc\">Shoka作者</p>\n        </div></div></div>\n<p><img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/shokaAuthor.webp\" alt=\"\" width=\"80%\" /><br />\nShoka 作者於<a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/\">部落格底下的留言中的回覆</a>，<br />\n該項目可能不再更新，Github 上最後的 Commit 日期是<a href=\"https://github.com/amehime/hexo-theme-shoka\"> 2021/10/03</a></p>\n<ul>\n<li>ShokaX</li>\n</ul>\n<p><a href=\"https://github.com/theme-shoka-x/hexo-theme-shokaX\">https://github.com/theme-shoka-x/hexo-theme-shokaX</a><br />\nShokaX 是 Shoka 的精神續作，<br />\n原先 Shoka 使用了 JavaScript + Native + Nunjucks 的技術，<br />\n而 ShokaX 則使用了 TypeScript + Vue 3 + Pug 的技術搭配，<br />\n並新增了一些功能。</p>\n<h1 id=\"安裝\"><a class=\"anchor\" href=\"#安裝\">#</a> 安裝</h1>\n<div class=\"note info\">\n<p>shokaX-CLI 已棄用，詳情: <a href=\"https://github.com/theme-shoka-x/shokaX-CLI\">https://github.com/theme-shoka-x/shokaX-CLI</a></p>\n</div>\n<p>安裝文檔: <a href=\"https://docs-hexo.shokax.top/getting-started/\">https://docs-hexo.shokax.top/getting-started/</a></p>\n<ol>\n<li>使用 shokaX can<br />\n<a href=\"https://github.com/theme-shoka-x/shokax-can\">https://github.com/theme-shoka-x/shokax-can</a></li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/theme-shoka-x/shokax-can <span class=\"token parameter variable\">--depth</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> shokax-can</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">pnpm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>\n<p>依說明文檔進行配置<br />\n<a href=\"https://docs.kaitaku.xyz/guide/config.html\"> https://docs.kaitaku.xyz/guide/config.html</a></p>\n</li>\n<li>\n<p>啟動 hexo server</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo s <span class=\"token comment\"># 如果報錯更換為 pnpm dlx hexo s</span></pre></td></tr></table></figure><h1 id=\"撰寫第一篇文章\"><a class=\"anchor\" href=\"#撰寫第一篇文章\">#</a> 撰寫第一篇文章</h1>\n<ol>\n<li>在 <code>source/_posts</code>  資料夾下新增一個 <code>md</code>  檔案，例如： <code>first.md</code> 。</li>\n<li>在檔案內容中新增一些內容，例如：</li>\n</ol>\n<figure class=\"highlight md\"><figcaption data-lang=\"Markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>title: 第一篇文章</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>date: 2024-04-24</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token title important\">tags: ShokaX</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">---</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">#</span> 第一篇文章</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>這是內容</pre></td></tr></table></figure><ol start=\"3\">\n<li>可以看到第一篇文章了。<br />\n<img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/firstpost.webp\" alt=\"\" width=\"80%\" /></li>\n</ol>\n<h1 id=\"seo-設置\"><a class=\"anchor\" href=\"#seo-設置\">#</a> SEO 設置</h1>\n<ul>\n<li>安裝 hexo-generator-sitemap</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-generator-sitemap</pre></td></tr></table></figure><ul>\n<li><a href=\"%22https://search.google.com/search-console%22\">Google SEO</a></li>\n<li><a href=\"%22https://analytics.google.com/%22\">Google Analytics</a></li>\n</ul>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">seo</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">google</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 填入資訊</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">visitor</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">googleAnalytics</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 填入資訊</span></pre></td></tr></table></figure>",
            "tags": [
                "ShokaX",
                "ShokaX安裝",
                "Hexo主題"
            ]
        },
        {
            "id": "https://blog.minz.li/shokaX/ShokaX%E6%8F%92%E4%BB%B6-%E9%BB%9E%E6%93%8A%E6%84%9B%E5%BF%83%E6%95%88%E6%9E%9C/",
            "url": "https://blog.minz.li/shokaX/ShokaX%E6%8F%92%E4%BB%B6-%E9%BB%9E%E6%93%8A%E6%84%9B%E5%BF%83%E6%95%88%E6%9E%9C/",
            "title": "ShokaX插件-點擊愛心效果",
            "date_published": "2024-08-01T16:00:00.000Z",
            "content_html": "<p><img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/clickHeart.webp\" alt=\"\" title=\"點擊愛心效果\" width=\"25%\" /></p>\n<ul>\n<li>關閉原本的點擊特效</li>\n</ul>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"><span>_config.shokax.yml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">fireworks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>/scripts/clickHeart.js</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'theme_inject'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">injects</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    injects<span class=\"token punctuation\">.</span>bodyEnd<span class=\"token punctuation\">.</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clickHeart'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'views/clickHeart.pug'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>/views/clickHeart.pug</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">script</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DOMContentLoaded'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 配置設定</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token constant\">CONFIG</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 愛心數量</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token constant\">HEART_COUNT</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token constant\">MOBILE</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 手機版愛心數量</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token constant\">DESKTOP</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span>  <span class=\"token comment\">// 桌面版愛心數量</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 愛心顏色</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token constant\">HEART_COLORS</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'#ff9999'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#ffb3ba'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#ffc8dd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#bae1ff'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#a2d2ff'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 愛心大小範圍（像素）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token constant\">HEART_SIZE</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token constant\">MIN</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token constant\">MAX</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 動畫持續時間（毫秒）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token constant\">ANIMATION_DURATION</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 最大愛心數量（用於清理）</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token constant\">MAX_HEARTS</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 移動範圍（像素）</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token constant\">MOVE_RANGE</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token constant\">X</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token constant\">Y</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 緩動函數類型</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token constant\">EASING</span><span class=\"token operator\">:</span> <span class=\"token string\">'easeOutQuad'</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">addStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">addMetaViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">const</span> heartsContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    heartsContainer<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>cssText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        position: fixed;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        top: 0;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        left: 0;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        width: 100%;</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        height: 100%;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        pointer-events: none;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        z-index: 9999;</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>heartsContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token function\">createFirework</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'touchstart'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">const</span> touch <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>touches<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token function\">createFirework</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">addStyles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        style<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            .heart &#123;</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                position: absolute;</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                pointer-events: none;</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                will-change: transform, opacity;</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">addMetaViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta[name=\"viewport\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token keyword\">const</span> meta <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'meta'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            meta<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'viewport'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            meta<span class=\"token punctuation\">.</span>content <span class=\"token operator\">=</span> <span class=\"token string\">'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">createFirework</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">const</span> fragment <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createDocumentFragment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">const</span> heartCount <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">&lt;</span> <span class=\"token number\">768</span> <span class=\"token operator\">?</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HEART_COUNT</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MOBILE</span> <span class=\"token operator\">:</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HEART_COUNT</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DESKTOP</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> heartCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">getRandomColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token keyword\">const</span> heart <span class=\"token operator\">=</span> <span class=\"token function\">createHeart</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            fragment<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>heart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        heartsContainer<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>fragment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token function\">clearOldHearts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">getRandomColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HEART_COLORS</span><span class=\"token punctuation\">[</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HEART_COLORS</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">createHeart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">const</span> heart <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElementNS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.w3.org/2000/svg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        heart<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"viewBox\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0 0 512 512\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        heart<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        heart<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>x<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>y<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElementNS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.w3.org/2000/svg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        path<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        path<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fill\"</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        heart<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HEART_SIZE</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MIN</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HEART_SIZE</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX</span> <span class=\"token operator\">-</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">HEART_SIZE</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MIN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        heart<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>size<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        heart<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>size<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token function\">animateHeart</span><span class=\"token punctuation\">(</span>heart<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token keyword\">return</span> heart<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">animateHeart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">heart<span class=\"token punctuation\">,</span> initialX<span class=\"token punctuation\">,</span> initialY</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token keyword\">const</span> startTime <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token keyword\">const</span> targetX <span class=\"token operator\">=</span> initialX <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MOVE_RANGE</span><span class=\"token punctuation\">.</span><span class=\"token constant\">X</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">const</span> targetY <span class=\"token operator\">=</span> initialY <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MOVE_RANGE</span><span class=\"token punctuation\">.</span><span class=\"token constant\">Y</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token keyword\">function</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">currentTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            <span class=\"token keyword\">const</span> elapsed <span class=\"token operator\">=</span> currentTime <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>elapsed <span class=\"token operator\">>=</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ANIMATION_DURATION</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                heart<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>            <span class=\"token keyword\">const</span> progress <span class=\"token operator\">=</span> elapsed <span class=\"token operator\">/</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ANIMATION_DURATION</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>            <span class=\"token keyword\">const</span> easedProgress <span class=\"token operator\">=</span> easing<span class=\"token punctuation\">[</span><span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">EASING</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>progress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            <span class=\"token keyword\">const</span> currentX <span class=\"token operator\">=</span> initialX <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>targetX <span class=\"token operator\">-</span> initialX<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> easedProgress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>            <span class=\"token keyword\">const</span> currentY <span class=\"token operator\">=</span> initialY <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>targetY <span class=\"token operator\">-</span> initialY<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> easedProgress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>            <span class=\"token keyword\">const</span> currentOpacity <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> easedProgress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            heart<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>transform <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>currentX<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>currentY<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            heart<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>opacity <span class=\"token operator\">=</span> currentOpacity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span>update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token keyword\">const</span> easing <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token function-variable function\">easeOutQuad</span><span class=\"token operator\">:</span> <span class=\"token parameter\">t</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token function-variable function\">easeOutCubic</span><span class=\"token operator\">:</span> <span class=\"token parameter\">t</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token function-variable function\">easeOutQuart</span><span class=\"token operator\">:</span> <span class=\"token parameter\">t</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token function-variable function\">easeOutQuint</span><span class=\"token operator\">:</span> <span class=\"token parameter\">t</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function\">clearOldHearts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        <span class=\"token keyword\">const</span> hearts <span class=\"token operator\">=</span> heartsContainer<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'heart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hearts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_HEARTS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> hearts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token constant\">CONFIG</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_HEARTS</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>                hearts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "ShokaX插件"
            ]
        },
        {
            "id": "https://blog.minz.li/shokaX/ShokaX%E6%8F%92%E4%BB%B6-%E6%AB%BB%E8%8A%B1/",
            "url": "https://blog.minz.li/shokaX/ShokaX%E6%8F%92%E4%BB%B6-%E6%AB%BB%E8%8A%B1/",
            "title": "ShokaX插件-櫻花",
            "date_published": "2024-07-27T16:00:00.000Z",
            "content_html": "<p><img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/sakuraScript.webp\" alt=\"\" title=\"添加櫻花掉落的效果\" /></p>\n<ul>\n<li>程式碼放在 Gitub<br />\n<a href=\"https://github.com/minz71/sakura-rain\">https://github.com/minz71/sakura-rain</a></li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>/scripts/sakura.js</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'theme_inject'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">injects</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    injects<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sakura'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'views/sakura.pug'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>/views/sakura.pug</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>script<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      window<span class=\"token punctuation\">.</span>sakuraConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token literal-property property\">sakura</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token literal-property property\">xSpeed</span><span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token literal-property property\">ySpeed</span><span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token literal-property property\">rSpeed</span><span class=\"token operator\">:</span> <span class=\"token number\">0.03</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token literal-property property\">direction</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TopRight\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token literal-property property\">zIndex</span><span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">script</span><span class=\"token punctuation\">(</span>src<span class=\"token operator\">=</span><span class=\"token string\">\"https://cdn.jsdelivr.net/gh/minz71/sakura-rain/sakura-rain.js\"</span> defer<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>如果不使用 jsdelivr ，可以到 Github 把程式碼下載下來放在這裡</p>\n</div>\n",
            "tags": [
                "ShokaX插件"
            ]
        },
        {
            "id": "https://blog.minz.li/tool/claude/",
            "url": "https://blog.minz.li/tool/claude/",
            "title": "Anthropic 的大語言模型 Claude",
            "date_published": "2024-07-12T16:00:00.000Z",
            "content_html": "<h1 id=\"anthropic-介紹\"><a class=\"anchor\" href=\"#anthropic-介紹\">#</a> Anthropic 介紹</h1>\n<ul>\n<li>是一家位於美國加州舊金山的人工智慧安全研究公司</li>\n<li>主要開發 Claude 語言模型</li>\n<li>該公司成立於<strong> 2021</strong> 年</li>\n<li>由 OpenAI 前研究副總裁 Dario Amodei 和 GPT-3 論文的第一作者 Tom Brown 等人共同創立</li>\n</ul>\n<h2 id=\"anthropic-主要投資者\"><a class=\"anchor\" href=\"#anthropic-主要投資者\">#</a> Anthropic 主要投資者</h2>\n<ul>\n<li>Amazon</li>\n<li>Google</li>\n<li>Menlo Ventures</li>\n</ul>\n<div class=\"note info\">\n<p>在 Alameda Research 破產後，持有的約 8% 的股份，大部分的出售給 <a href=\"%22https://www.cnbc.com/2024/03/25/ftx-estate-sells-majority-stake-in-startup-anthropic-for-884-million.html%22\">UAE 及其主權財富基金</a></p>\n</div>\n<p>關於 Anthropic 的融資，可以參考 <a href=\"https://tracxn.com/d/companies/anthropic/__SzoxXDMin-NK5tKB7ks8yHr6S9Mz68pjVCzFEcGFZ08/funding-and-investors\">這裡</a>。</p>\n<h1 id=\"使用-claude-的語言模型\"><a class=\"anchor\" href=\"#使用-claude-的語言模型\">#</a> 使用 Claude 的語言模型</h1>\n<div class=\"links\"><div class=\"item\" title=\"Claude\" style=\"--block-color:#e9546b;\"><a href=\"https://claude.ai/\" class=\"image\" data-background-image=\"https://claude.ai/favicon.ico\"></a>\n        <div class=\"info\">\n        <a href=\"https://claude.ai/\" class=\"title\">Claude</a>\n        <p class=\"desc\">https://claude.ai/</p>\n        </div></div></div>\n<h2 id=\"在網頁上使用\"><a class=\"anchor\" href=\"#在網頁上使用\">#</a> 在網頁上使用</h2>\n<p>在 <a href=\"https://claude.ai/\">https://claude.ai/</a> 註冊一個帳號，<strong>驗證手機號碼</strong>後就可以使用。</p>\n<div class=\"note info\">\n<p>以下是 2024/07/13 的資訊，由於模型更新速度很快，之後可能會有所變動。</p>\n</div>\n<p>免費板使用的模型是  <code>Sonnet 3.5 Sonnet</code> ，<a href=\"https://support.anthropic.com/zh-TW/articles/8325610-claude-pro%E7%9A%84%E5%83%B9%E6%A0%BC%E6%98%AF%E5%A4%9A%E5%B0%91\">付費方案</a>每個月 20 美元，可以在  <code>Sonnet 3.5 Sonnet</code>  使用更長的上下文，未來應該會推出  <code>Sonnet 3.5 Opus</code> 。</p>\n<h2 id=\"使用api\"><a class=\"anchor\" href=\"#使用api\">#</a> 使用 API</h2>\n<p><a href=\"https://support.anthropic.com/zh-TW/articles/8114521-%E6%88%91%E5%A6%82%E4%BD%95%E5%AD%98%E5%8F%96claude-api\">Claude 網站上使用</a><br />\n<a href=\"https://aws.amazon.com/tw/bedrock/claude/\"> Amazon Bedrock Claude</a><br />\n<a href=\"https://cloud.google.com/vertex-ai/generative-ai/docs/partner-models/use-claude\">Vertex AI</a></p>\n<h1 id=\"claude-系列\"><a class=\"anchor\" href=\"#claude-系列\">#</a> Claude 系列</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">系列</th>\n<th style=\"text-align:center\">回應速度</th>\n<th style=\"text-align:center\">聰明程度</th>\n<th style=\"text-align:center\">價格</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Opus</td>\n<td style=\"text-align:center\">較慢</td>\n<td style=\"text-align:center\">非常高</td>\n<td style=\"text-align:center\">Input $15 / 1M tokens <br> Output $75 / 1M tokens</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Sonnet</td>\n<td style=\"text-align:center\">中等</td>\n<td style=\"text-align:center\">高</td>\n<td style=\"text-align:center\">Input $3 / 1M tokens <br> Output $15 / 1M tokens</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Haiku</td>\n<td style=\"text-align:center\">最快</td>\n<td style=\"text-align:center\">較低</td>\n<td style=\"text-align:center\">Input $0.25 / 1M tokens <br> Output $1.25 / 1M tokens</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"anthropic-prompt-library\"><a class=\"anchor\" href=\"#anthropic-prompt-library\">#</a> Anthropic prompt library</h1>\n<ul>\n<li>模型的回答品質，很大的程度取決於 prompt，也就是問模型的提示詞</li>\n<li>以下是 Anthropic 提供的 prompt 範例<br />\n<a href=\"https://docs.anthropic.com/zh-TW/prompt-library/library\"> https://docs.anthropic.com/zh-TW/prompt-library/library</a></li>\n</ul>\n",
            "tags": [
                "Claude",
                "llm",
                "Anthropic"
            ]
        },
        {
            "id": "https://blog.minz.li/CS/domainSearch/",
            "url": "https://blog.minz.li/CS/domainSearch/",
            "title": "域名搜尋工具",
            "date_published": "2024-06-25T16:00:00.000Z",
            "content_html": "<h1 id=\"tld-list\"><a class=\"anchor\" href=\"#tld-list\">#</a> TLD-LIST</h1>\n<div class=\"links\"><div class=\"item\" title=\"TLD-LIST\" style=\"--block-color:#e9546b;\"><a href=\"https://zh-hant.tld-list.com/\" class=\"image\" data-background-image=\"https://zh-hant.tld-list.com/favicon.ico\"></a>\n        <div class=\"info\">\n        <a href=\"https://zh-hant.tld-list.com/\" class=\"title\">TLD-LIST</a>\n        <p class=\"desc\">域名搜尋工具</p>\n        </div></div></div>\n<h2 id=\"功能\"><a class=\"anchor\" href=\"#功能\">#</a> 功能</h2>\n<ul>\n<li>\n<p>查詢可使用的域名</p>\n</li>\n<li>\n<p>域名供應商的比價工具</p>\n</li>\n<li>\n<p>查看域名供應商評價</p>\n</li>\n<li>\n<p>首頁<br />\n<img loading=\"lazy\" data-src=\"/assets/domainSearch/1.png\" alt=\"首頁\" /></p>\n</li>\n<li>\n<p>搜尋結果<br />\n<img loading=\"lazy\" data-src=\"/assets/domainSearch/2.png\" alt=\"搜尋結果\" /></p>\n</li>\n</ul>\n<h1 id=\"二級域名\"><a class=\"anchor\" href=\"#二級域名\">#</a> 二級域名</h1>\n<p>頂級域名 (TLD): 例如  <code>.com</code>   <code>.org</code>   <code>.net</code>  等。<br />\n二級域名：位於頂級域名之前，例如 <strong>example</strong>.com 中的  <code>example</code> 。<br />\n三級域名：位於二級域名之前，例如 <strong>blog</strong>.example.com 中的  <code>blog</code> 。</p>\n<div class=\"note info\">\n<p>大多數 2 級域名是不能添加至<a href=\"https://www.cloudflare.com/\"> Cloudflare</a><br />\n 不過 <a href=\"http://eu.org\">eu.org</a> 可以添加</p>\n</div>\n<h1 id=\"註冊-euorg\"><a class=\"anchor\" href=\"#註冊-euorg\">#</a> 註冊 <a href=\"http://eu.org\">eu.org</a></h1>\n<div class=\"links\"><div class=\"item\" title=\"nic.eu.org\" style=\"--block-color:#e9546b;\"><a href=\"https://nic.eu.org/\" class=\"image\" data-background-image=\"/assets/404.png\"></a>\n        <div class=\"info\">\n        <a href=\"https://nic.eu.org/\" class=\"title\">nic.eu.org</a>\n        <p class=\"desc\">免費eu.org域名</p>\n        </div></div></div>\n<div class=\"note danger\">\n<p><a href=\"http://eu.org\">eu.org</a> 對於新域名的審核需要一段時間，或是不再通過審核了。</p>\n</div>\n<ol>\n<li>\n<p><a href=\"https://nic.eu.org/arf/en/contact/create/\">https://nic.eu.org/arf/en/contact/create/</a></p>\n</li>\n<li>\n<p>填寫 Contact Information<br />\nName: 要有空格<br />\n Address: 至少填入 line 1 跟 line 2<br />\nphone: 可以不填寫<br />\n Private: 建議打勾</p>\n</li>\n<li>\n<p>註冊後到信箱點擊驗證連結<br />\n需要一段時間才能收到驗證信，可能是幾天。</p>\n</li>\n<li>\n<p><a href=\"https://nic.eu.org/arf/en/login/\">https://nic.eu.org/arf/en/login/</a> 註冊完成後在這裡登入</p>\n</li>\n<li>\n<p>點擊  <code>new domain</code></p>\n</li>\n<li>\n<p>先填入你想要的 domain name<br />\n 後綴需要 <a href=\"http://eu.org\">eu.org</a>，例如 <a href=\"http://minzz.eu.org\">minzz.eu.org</a><br />\n 名稱如果被註冊過會顯示 <code>Domain already exists</code> ，可以試試其他名稱。</p>\n</li>\n<li>\n<p>在 Name servers 這個欄位填入 cloudflare 提供的 nameserver</p>\n</li>\n<li>\n<p>需要等待一段時間後才會生效，可能是幾天。</p>\n</li>\n</ol>\n<h1 id=\"使用-cloudflare-的範例\"><a class=\"anchor\" href=\"#使用-cloudflare-的範例\">#</a> 使用 Cloudflare 的範例</h1>\n<ol>\n<li>添加網站<br />\n<img loading=\"lazy\" data-src=\"/assets/domainSearch/cfAddWebsite.webp\" alt=\"添加網站\" /></li>\n<li>輸入 domain name<br />\n<img loading=\"lazy\" data-src=\"/assets/domainSearch/cfAddWebsite2.webp\" alt=\"輸入 domain name\" /></li>\n<li>選擇 Free 套餐</li>\n<li>添加一筆 DNS 紀錄</li>\n<li>找到 cloudflare 提供的 nameserver<br />\n<img loading=\"lazy\" data-src=\"/assets/domainSearch/cfAddNS.webp\" alt=\"cloudflare 提供的 nameserver\" /></li>\n<li>在 <a href=\"http://nic.eu.org\">nic.eu.org</a> 的 Name servers 欄位填入<br />\n<img loading=\"lazy\" data-src=\"/assets/domainSearch/euorgNS.webp\" alt=\"nic.eu.org 的 Name servers 欄位\" /></li>\n</ol>\n",
            "tags": [
                "domain",
                "TLD-LIST",
                "eu.org",
                "cloudflare"
            ]
        },
        {
            "id": "https://blog.minz.li/tool/lmsys/",
            "url": "https://blog.minz.li/tool/lmsys/",
            "title": "Chatbot Arena LMSYS 介紹",
            "date_published": "2024-06-16T16:00:00.000Z",
            "content_html": "<h1 id=\"lmsysorg\"><a class=\"anchor\" href=\"#lmsysorg\">#</a> <a href=\"http://LMSYS.Org\">LMSYS.Org</a></h1>\n<p>LMSYS Org (Large Model Systems Organization) 是一個開放的研究組織，由 UC Berkeley 的學生和教師與 UCSD 和 CMU 合作創立。<br />\n旨在通過共同開發開放模型、數據集、系統和評估工具，使大型模型對所有人都能夠接觸和使用。<br />\n希望建立一個開放和透明的平臺，提供語言模型基準數據和評估工具，幫助研究人員和開發者更好地理解和提升他們的模型性能。</p>\n<div class=\"note info\">\n<p>本文主要介紹 Chatbot Arena，LMSYS Org 有其他的 projects。<br />\n詳情可參考: <a href=\"https://lmsys.org/projects/\">https://lmsys.org/projects/</a></p>\n</div>\n<h1 id=\"chatbot-arena\"><a class=\"anchor\" href=\"#chatbot-arena\">#</a> Chatbot Arena</h1>\n<div class=\"links\"><div class=\"item\" title=\"LMSYS\" style=\"--block-color:#e9546b;\"><a href=\"https://arena.lmsys.org/\" class=\"image\" data-background-image=\"https://lmsys.org/favicon.jpeg\"></a>\n        <div class=\"info\">\n        <a href=\"https://arena.lmsys.org/\" class=\"title\">LMSYS</a>\n        <p class=\"desc\">arena.lmsys.org</p>\n        </div></div></div>\n<ol>\n<li>⚔️ Arena (battle)<br />\n 使用者可以輸入問題，會隨機提供不同的模型回答，使用者可以對回答較佳的模型投票，投票後會顯示剛剛回答的模型。</li>\n<li>👀 Arena (Multimodal)<br />\n 使用者可以輸入<strong>圖片</strong>，會隨機提供不同的模型回答。</li>\n<li>⚔️ Arena (side-by-side)<br />\n 可以讓使用者選擇 2 個<strong>指定</strong>的模型，使用者可以對回答較佳的模型投票。</li>\n<li>💬 Direct Chat<br />\n 使用者可以直接和模型對話，可以選擇指定的模型。</li>\n</ol>\n<ul>\n<li>向模型提問的範例：</li>\n</ul>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>今天有 3 個蘋果，我昨天吃了 1 個，請問還剩下幾個?</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"/assets/tool/lmsysArena1.webp\" alt=\"\" title=\"詢問模型\" width=\"80%\" /></p>\n<p><img loading=\"lazy\" data-src=\"/assets/tool/lmsysArena2.webp\" alt=\"\" title=\"投票後\" width=\"80%\" /></p>\n<h1 id=\"llm-排行榜\"><a class=\"anchor\" href=\"#llm-排行榜\">#</a> LLM 排行榜</h1>\n<p><a href=\"http://lmsys.org\">lmsys.org</a> 每周都會發布排行榜，可以做為模型能力的參考。<br />\n也可以選擇不同的分類，查看該分類的排行榜。</p>\n<p><img loading=\"lazy\" data-src=\"/assets/tool/lmsysLeaderBoard.webp\" alt=\"\" title=\"LLM 排行榜\" width=\"80%\" /></p>\n<h1 id=\"贊助商\"><a class=\"anchor\" href=\"#贊助商\">#</a> 贊助商</h1>\n<p><img loading=\"lazy\" data-src=\"/assets/tool/lmsysDonations.webp\" alt=\"\" title=\"LMSYS Donation\" width=\"80%\" /><br />\n可以看到有許多大公司都贊助了 LMSYS，<br />\n在新模型發布時，都會在第一時間提供給最新的語言模型，<br />\n例如當時流傳的 m-also-a-good-gpt2-chatbot，也就是現在的 GPT-4o。</p>\n",
            "tags": [
                "llm",
                "LMSYS"
            ]
        },
        {
            "id": "https://blog.minz.li/DevOps/releaseDockerCache/",
            "url": "https://blog.minz.li/DevOps/releaseDockerCache/",
            "title": "刪除 WSL 環境下的 docker build cache",
            "date_published": "2024-05-30T16:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>在 WSL 環境下，發現即使將 linux 中的檔案刪除，windows 下的磁碟空間也沒有釋放。</p>\n<h1 id=\"將docker-build-cache-刪除\"><a class=\"anchor\" href=\"#將docker-build-cache-刪除\">#</a> 將 Docker Build Cache 刪除</h1>\n<ol>\n<li>查看目前的建置緩存</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> system <span class=\"token function\">df</span></pre></td></tr></table></figure><ul>\n<li>可以看到以下輸出</li>\n</ul>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Images          9         8         28.91GB   13.19GB (45%)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Containers      8         8         3.872GB   0B (0%)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Local Volumes   1         1         263.9kB   0B (0%)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Build Cache     64        0         44.79GB   44.79GB</pre></td></tr></table></figure><ol start=\"2\">\n<li>刪除 Build Cache</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> builder prune</pre></td></tr></table></figure><ul>\n<li>出現刪除警告後輸入 y 繼續</li>\n</ul>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>WARNING! This will remove all dangling build cache. Are you sure you want to continue? [y/N]</pre></td></tr></table></figure><p>在這個步驟後發現 windows 下的磁碟空間沒有釋放。</p>\n<h1 id=\"釋放虛擬磁碟檔案\"><a class=\"anchor\" href=\"#釋放虛擬磁碟檔案\">#</a> 釋放虛擬磁碟檔案</h1>\n<ol>\n<li>將 WSL 關機</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl <span class=\"token parameter variable\">--shutdown</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>進入 diskpart</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>diskpart</pre></td></tr></table></figure><ol start=\"3\">\n<li>選擇虛擬磁碟</li>\n</ol>\n<p>請替換  <code>user</code>  為自己的使用者名稱<br />\n並且依 linux 版本不同 <code>CanonicalGroupLimited.Ubuntu20.04onWindows_79rhkp1fndgsc</code>  會有所不同。</p>\n<p>虛擬磁碟可以在這裡找到 C:\\Users\\  <code>user</code>  \\AppData\\Local\\Packages\\  <code>CanonicalGroupLimited.Ubuntu_79rhkp1fndgsc</code>  \\LocalState\\ext4.vhdx</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> vdisk <span class=\"token assign-left variable\">file</span><span class=\"token operator\">=</span><span class=\"token string\">\"C:\\Users\\user\\AppData\\Local\\Packages\\CanonicalGroupLimited.Ubuntu_79rhkp1fndgsc\\LocalState<span class=\"token entity\" title=\"\\e\">\\e</span>xt4.vhdx\"</span></pre></td></tr></table></figure><ol start=\"4\">\n<li>以只讀模式附加磁碟</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>attach vdisk <span class=\"token builtin class-name\">readonly</span></pre></td></tr></table></figure><ol start=\"5\">\n<li>壓縮虛擬磁碟</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>compact vdisk</pre></td></tr></table></figure><ol start=\"6\">\n<li>卸載虛擬磁碟</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>detach vdisk</pre></td></tr></table></figure><ol start=\"7\">\n<li>離開 diskpart</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr></table></figure><p>磁碟空間已經釋放後，重新啟動 WSL。</p>\n",
            "tags": [
                "DevOps",
                "Docker",
                "WSL"
            ]
        },
        {
            "id": "https://blog.minz.li/other/netflixShare/",
            "url": "https://blog.minz.li/other/netflixShare/",
            "title": "Netflix共享",
            "date_published": "2024-03-04T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>本文撰寫於 2024 年 3 月 05 日，Netflix 可能會修改共享政策。</p>\n</div>\n<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>Netflix 在 2023 年宣布打擊共享帳號，並宣布僅限<strong>同住者</strong>一起使用。<br />\n<a href=\"https://help.netflix.com/zh-tw/node/124925\">https://help.netflix.com/zh-tw/node/124925</a></p>\n<ul>\n<li>Netflix 會鎖定跨區帳號，鎖定帳號後可能不會退款。</li>\n</ul>\n<h2 id=\"限制方式\"><a class=\"anchor\" href=\"#限制方式\">#</a> 限制方式</h2>\n<ol>\n<li>需要取得驗證碼</li>\n</ol>\n<ul>\n<li>可以使用自動轉寄，將確認信件轉給其他人</li>\n</ul>\n<details class=\"info\"><summary>如圖</summary><div>\n<p><img loading=\"lazy\" data-src=\"https://i.imgur.com/er8aeX5.png\" alt=\"\" /></p>\n</div></details>\n<ol start=\"2\">\n<li>要求使用額外帳號</li>\n</ol>\n<h2 id=\"可能的方案\"><a class=\"anchor\" href=\"#可能的方案\">#</a> 可能的方案</h2>\n<h3 id=\"3人方案\"><a class=\"anchor\" href=\"#3人方案\">#</a> 3 人方案</h3>\n<p>台灣高級方案 390 / 月<br />\n額外成員每位 100 / 月<br />\n高級方案 (同住者共享)+2 位額外成員 (2 台電視)<br />\n 共 3 位成員</p>\n<ul>\n<li>使用主帳號者可以 4 台裝置同時觀看</li>\n<li>符合一個帳號一人</li>\n</ul>\n<h3 id=\"45人方案\"><a class=\"anchor\" href=\"#45人方案\">#</a> 4/5 人方案</h3>\n<p>台灣高級方案 390 / 月</p>\n<ul>\n<li>最多一台電視</li>\n<li>可能會被偵測到不屬於同戶裝置</li>\n<li>每 30 天要去取得同戶裝置標記 (連上相同網路觀看)</li>\n</ul>\n<div class=\"note info\">\n<p>若沒有人使用電視，則由 Netflix 自動判斷戶長</p>\n</div>\n",
            "tags": [
                "Netflix",
                "Netflix共享"
            ]
        },
        {
            "id": "https://blog.minz.li/CS/madVR/",
            "url": "https://blog.minz.li/CS/madVR/",
            "title": "madVR 安裝教學",
            "date_published": "2024-02-28T16:00:00.000Z",
            "content_html": "<h2 id=\"madvr-介紹\"><a class=\"anchor\" href=\"#madvr-介紹\">#</a> MadVR 介紹</h2>\n<div class=\"links\"><div class=\"item\" title=\"madVR\" style=\"--block-color:#e9546b;\"><a href=\"https://madshi.net/index.htm\" class=\"image\" data-background-image=\"https://madshi.net/madshi256.gif\"></a>\n        <div class=\"info\">\n        <a href=\"https://madshi.net/index.htm\" class=\"title\">madVR</a>\n        <p class=\"desc\">DirectShow video renderer</p>\n        </div></div></div>\n<ul>\n<li>官方網站上沒有 madVR 的下載連結</li>\n</ul>\n<p>Change Log: <a href=\"https://forum.doom9.org/showthread.php?t=146228\">https://forum.doom9.org/showthread.php?t=146228</a><br />\n 下載頁面: <a href=\"https://www.videohelp.com/software/madVR\">https://www.videohelp.com/software/madVR</a><br />\n 所有版本: <a href=\"https://www.videohelp.com/software/madVR/old-versions#download\">https://www.videohelp.com/software/madVR/old-versions#download</a></p>\n<div class=\"note info\">\n<p>如果之前安裝過其他版本的 madVR，建議先解除安裝舊版本。</p>\n</div>\n<div class=\"note warning\">\n<p>本文沒有針對 HDR 設定的教學</p>\n</div>\n<h2 id=\"lavfilter-解碼器\"><a class=\"anchor\" href=\"#lavfilter-解碼器\">#</a> LAVFilter 解碼器</h2>\n<ol>\n<li>下載<a href=\"https://github.com/Nevcairiel/LAVFilters/releases\"> LAVFilter 解碼器</a></li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"/assets/madVR/installLAV.webp\" alt=\"\" width=\"70%\" /></p>\n<ol start=\"2\">\n<li>依圖片設定 LAVFilter</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"/assets/madVR/LAVsetup.webp\" alt=\"\" width=\"70%\" /></p>\n<div class=\"note info\">\n<p>音訊建議使用 LAV Audio Decoder</p>\n</div>\n<h2 id=\"potplayer-設定\"><a class=\"anchor\" href=\"#potplayer-設定\">#</a> PotPlayer 設定</h2>\n<ol>\n<li>\n<p>安裝 PotPlayer (MPC-BE 也可以使用 madVR)</p>\n</li>\n<li>\n<p>到<strong>偏好設定</strong>在右下角初始化</p>\n</li>\n<li>\n<p>濾鏡 / 解編碼器 &gt; 內建視訊處理設定 選擇 &quot;不使用&quot;<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/setup1.webp\" alt=\"\" width=\"70%\" /></p>\n</li>\n<li>\n<p>濾鏡 / 解編碼器 &gt; 全域濾鏡優先順序 新增系統慮鏡 &quot;LAV Video Decoder&quot; 優先順序選擇強制啟用<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/setup2.webp\" alt=\"\" width=\"70%\" /></p>\n</li>\n<li>\n<p>視訊 &gt; 視訊渲染方式 &gt; madVR</p>\n</li>\n</ol>\n<div class=\"note info\">\n<p>PotPlayer 使用獨佔模式可能有全螢幕下時間軸不顯示的 Bug</p>\n</div>\n<p><img loading=\"lazy\" data-src=\"/assets/madVR/setup3.webp\" alt=\"\" width=\"70%\" /></p>\n<ol start=\"6\">\n<li>音訊 &gt; 預設輸出裝置 內建 WASAPI<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/setup4.webp\" alt=\"\" width=\"70%\" /></li>\n</ol>\n<details class=\"info\"><summary>音訊 > 標準化 > 取消勾選 (依需求設定)</summary><div>\n<p><img loading=\"lazy\" data-src=\"/assets/madVR/setup5.webp\" alt=\"\" width=\"70%\" /></p>\n</div></details>\n<h2 id=\"nvidia-顯卡設定\"><a class=\"anchor\" href=\"#nvidia-顯卡設定\">#</a> NVIDIA 顯卡設定</h2>\n<ol>\n<li>管理 3D 設定 &gt; 新增 PotPlayer &gt; 垂直同步：開啟 &gt; 電源管理模式：慣用的最大效能<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/NVIDIA.webp\" alt=\"\" width=\"70%\" /></li>\n<li>NVIDIA 色彩設置</li>\n</ol>\n<h2 id=\"安裝madvr\"><a class=\"anchor\" href=\"#安裝madvr\">#</a> 安裝 madVR</h2>\n<ol>\n<li>\n<p>將下載的 madVR 解壓縮</p>\n</li>\n<li>\n<p>用系統管理員模式執行 install.bat<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/madVR1.webp\" alt=\"\" width=\"70%\" /></p>\n</li>\n<li>\n<p>出現成功安裝<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/madVR2.webp\" alt=\"\" width=\"70%\" /></p>\n</li>\n</ol>\n<h2 id=\"設置madvr\"><a class=\"anchor\" href=\"#設置madvr\">#</a> 設置 madVR</h2>\n<ol>\n<li>\n<p>madHcCtrl 用來設置</p>\n</li>\n<li>\n<p>將螢幕設定為 Digital Monitor / TV 並設定 10bit<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/madVR3.webp\" alt=\"\" width=\"70%\" /></p>\n</li>\n<li>\n<p>開啟去色帶功能<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/madVR5.webp\" alt=\"\" width=\"70%\" /></p>\n</li>\n<li>\n<p>由於片源的幀數通常為 24，螢幕的刷新率通常不是 24 的整數倍，因此建議開啟 smooth motion 功能。<br />\n<img loading=\"lazy\" data-src=\"/assets/madVR/madVR4.webp\" alt=\"\" width=\"70%\" /></p>\n</li>\n<li>\n<p>scaling algorithms</p>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">效能要求</th>\n<th style=\"text-align:center\">chroma upscaling</th>\n<th style=\"text-align:center\">image downscaling</th>\n<th style=\"text-align:center\">image upscaling</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">低</td>\n<td style=\"text-align:center\">Cubic (Bicubic50)</td>\n<td style=\"text-align:center\">Cubic (Bicubic50) + LL</td>\n<td style=\"text-align:center\">Lanczos (3 taps) + SL</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">中</td>\n<td style=\"text-align:center\">Cubic (Bicubic50) + AR</td>\n<td style=\"text-align:center\">Cubic (Bicubic50) + LL + AR (relaxed)</td>\n<td style=\"text-align:center\">Jinc + AR + SL</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">高</td>\n<td style=\"text-align:center\">super-xbr (100) + AR</td>\n<td style=\"text-align:center\">SSIM (1D – 100%) + LL + AR (relaxed)</td>\n<td style=\"text-align:center\">NGU Sharp (medium)</td>\n</tr>\n</tbody>\n</table>\n<p>LL = &quot;scale in linear light&quot;<br />\nSL = &quot;scale in sigmoidal light&quot;<br />\nAR = &quot;activate anti-ringing filter&quot;<br />\nNGU Sharp 除了選擇&quot;luma doubling&quot;品質以外，其餘全部保留默認的&quot;let madVR decide&quot; 即可</p>\n<div class=\"note info\">\n<p>這裡對性能要求的高低並不絕對等同於畫質的高低</p>\n</div>\n<p>&quot;低&quot; 檔設置的品質其實已經相當好了<br />\n &quot;高&quot; 檔設置在一些低品質片源上反而有可能放大片源瑕疵<br />\n<strong>推薦 &quot;中&quot; 檔設置在畫質、功耗和泛用性之間較為平衡的選擇</strong></p>\n<h2 id=\"k-lite-codec-pack-full\"><a class=\"anchor\" href=\"#k-lite-codec-pack-full\">#</a> K-Lite Codec Pack Full</h2>\n<ul>\n<li>包含 MPC-HC 和 madVR 的安裝包</li>\n</ul>\n<p><a href=\"https://codecguide.com/download_k-lite_codec_pack_full.htm\">https://codecguide.com/download_k-lite_codec_pack_full.htm</a></p>\n<h2 id=\"參考資料\"><a class=\"anchor\" href=\"#參考資料\">#</a> 參考資料</h2>\n<ol>\n<li><a href=\"https://vcb-s.com/archives/16609\">https://vcb-s.com/archives/16609</a></li>\n<li><a href=\"https://lysandria1985.blogspot.com/2013/01/3-madvr.html\">https://lysandria1985.blogspot.com/2013/01/3-madvr.html</a></li>\n</ol>\n",
            "tags": [
                "madVR"
            ]
        },
        {
            "id": "https://blog.minz.li/CS/weatherAPI/",
            "url": "https://blog.minz.li/CS/weatherAPI/",
            "title": "API使用範例-氣象資料開放平台",
            "date_published": "2024-02-27T16:00:00.000Z",
            "content_html": "<h1 id=\"api使用範例-氣象資料開放平台\"><a class=\"anchor\" href=\"#api使用範例-氣象資料開放平台\">#</a> API 使用範例 - 氣象資料開放平台</h1>\n<h2 id=\"介紹\"><a class=\"anchor\" href=\"#介紹\">#</a> 介紹</h2>\n<div class=\"note primary\">\n<p>這篇文章介紹關於氣象資料開放平台 API 的註冊和使用說明，並提供了程式碼範例。</p>\n</div>\n<ol>\n<li>\n<p>到<a href=\"https://opendata.cwa.gov.tw/index\">氣象資料開放平台</a>註冊帳號<br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/openWeatherData.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n<li>\n<p>註冊一個帳號 <a href=\"https://pweb.cwa.gov.tw/emember/register\">https://pweb.cwa.gov.tw/emember/register</a><br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/openWeatherDataRegister.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n<li>\n<p>到電子信箱啟用會員後再次<a href=\"https://opendata.cwa.gov.tw/userLogin\">登入</a><br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/emailConfirm.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n<li>\n<p>登入後取得授權碼並將授權碼複製下來<br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/getToken.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n<li>\n<p>前往開發指南查看<a href=\"https://opendata.cwa.gov.tw/dist/opendata-swagger.html\"> api 文件</a><br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/apiDoc.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n<li>\n<p>可以在 swagger 文檔中使用 API request<br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/trySwagger1.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n<li>\n<p>填入需要的參數後點擊 Execute 執行<br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/trySwagger2.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n<li>\n<p>執行後的回傳結果<br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/result.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n</ol>\n<h2 id=\"執行程式碼\"><a class=\"anchor\" href=\"#執行程式碼\">#</a> 執行程式碼</h2>\n<p><img loading=\"lazy\" data-src=\"/assets/weatherAPI/urlFormat.webp\" alt=\"\" width=\"85%\" /></p>\n<ul>\n<li>\n<p>BaseUrl<br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/baseUrl.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n<li>\n<p>API Path<br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/apiPath.webp\" alt=\"\" width=\"85%\" /></p>\n</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> baseUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://opendata.cwa.gov.tw/api/v1/\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token string\">\"rest/datastore/F-D0047-063\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> Authorization <span class=\"token operator\">=</span> <span class=\"token string\">\"yourAuthorization\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span> baseUrl <span class=\"token operator\">+</span> path <span class=\"token operator\">+</span> <span class=\"token string\">\"?Authorization=\"</span> <span class=\"token operator\">+</span> Authorization<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">myJson</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 輸出 json 資料</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>結果輸出<br />\n<img loading=\"lazy\" data-src=\"/assets/weatherAPI/consoleTest.webp\" alt=\"\" width=\"85%\" /></li>\n</ul>\n",
            "tags": [
                "API"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E9%9D%A2%E8%A9%A6%E5%BF%83%E5%BE%97/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E9%9D%A2%E8%A9%A6%E5%BF%83%E5%BE%97/",
            "title": "面試心得",
            "date_published": "2024-01-21T16:00:00.000Z",
            "content_html": "<p>每關各 5 分鐘的時間</p>\n<p>第一間教室</p>\n<ol>\n<li>自我介紹 30 秒</li>\n<li>念出桌上的英文句子</li>\n<li>骰子 2 奇 1 偶的機率是多少</li>\n<li>你認為資料結構排序演算法看重什麼？</li>\n<li>P 跟 NP 的意思<br />\n Polynomial Time 跟 Non-deterministic Polynomial Time</li>\n</ol>\n<p>第二間教室</p>\n<ol>\n<li>自我介紹 30 秒</li>\n<li>依經驗問問題</li>\n<li>未來想做什麼研究</li>\n<li>多益分數</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "https://blog.minz.li/UiPath/Introduction/",
            "url": "https://blog.minz.li/UiPath/Introduction/",
            "title": "UiPath介紹",
            "date_published": "2023-12-19T16:00:00.000Z",
            "content_html": "<div class=\"links\"><div class=\"item\" title=\"UiPath\" style=\"--block-color:#e9546b;\"><a href=\"https://www.uipath.com/\" class=\"image\" data-background-image=\"https://play-lh.googleusercontent.com/swjV4_QK7DMpiQpn2uGt4L4Iz8IQaKc1lIoLKDvnqGiEm1UKwIukhhV8f_VYayZ8yyc=w240-h480-rw\"></a>\n        <div class=\"info\">\n        <a href=\"https://www.uipath.com/\" class=\"title\">UiPath</a>\n        <p class=\"desc\">https://www.uipath.com/</p>\n        </div></div></div>\n<h1 id=\"介紹-introduction\"><a class=\"anchor\" href=\"#介紹-introduction\">#</a> 介紹 introduction</h1>\n<ul>\n<li>機器人流程自動化 (Robotic Pocess Automation)</li>\n<li>自動反覆執行</li>\n<li>圖形化介面編輯腳本</li>\n</ul>\n<h2 id=\"開始使用\"><a class=\"anchor\" href=\"#開始使用\">#</a> 開始使用</h2>\n<p><img loading=\"lazy\" data-src=\"/assets/UiPath/2.png\" alt=\"\" title=\"可以串接的服務\" width=\"80%\" /></p>\n<p><img loading=\"lazy\" data-src=\"/assets/UiPath/1.png\" alt=\"\" title=\"選擇範本\" width=\"80%\" /></p>\n<h2 id=\"版本\"><a class=\"anchor\" href=\"#版本\">#</a> 版本</h2>\n<p><img loading=\"lazy\" data-src=\"https://i.imgur.com/SBuMsZL.png\" alt=\"\" title=\"不同版本的差異\" width=\"80%\" /></p>\n<h2 id=\"uipath-studio-介面\"><a class=\"anchor\" href=\"#uipath-studio-介面\">#</a> UiPath Studio 介面</h2>\n<p><img loading=\"lazy\" data-src=\"https://i.imgur.com/3AxfXFw.png\" alt=\"\" width=\"80%\" /></p>\n<h1 id=\"ai工具\"><a class=\"anchor\" href=\"#ai工具\">#</a> AI 工具</h1>\n<h2 id=\"generative-validation-產生驗證\"><a class=\"anchor\" href=\"#generative-validation-產生驗證\">#</a> generative validation 產生驗證</h2>\n<ul>\n<li>因為人工智慧模型可能出錯</li>\n<li>生成人工智慧作為<strong>第二意見去比對</strong></li>\n<li>如果生成模型和專用模型最終都得到相同的結果，則跳過人工檢查</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://images.ctfassets.net/5965pury2lcm/6f7UJexuKmeHbR3oo3DLoN/0f3c77af9e98e44c0a03caa029977eb4/AHT_STP.png\" alt=\"\" width=\"80%\" /></p>\n<h2 id=\"uipath-clipboard-aitm\"><a class=\"anchor\" href=\"#uipath-clipboard-aitm\">#</a> UiPath Clipboard AI™</h2>\n<ul>\n<li>使用圖片文字辨識</li>\n<li>自動填入表格等位置</li>\n</ul>\n<p><img loading=\"lazy\" data-src=\"https://images.ctfassets.net/5965pury2lcm/4QkbAcBnjicS9SOBjPubmG/0ca2f4d10a47bbffbcbd195f0a4ed8fc/Clipboard_AI_at_UiPath.PNG\" alt=\"\" title=\"官方Demo圖片\" width=\"80%\" /></p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/FouRcBqj5tA?si=Rvj1XajetIxMdZaQ&amp;start=25\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n<h2 id=\"uipath-document-understanding\"><a class=\"anchor\" href=\"#uipath-document-understanding\">#</a> UiPath Document Understanding</h2>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ZiqaKeXuIos?si=-8VyfN2onYxCz-EU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n<p><img loading=\"lazy\" data-src=\"https://images.ctfassets.net/5965pury2lcm/4hMwDcIv7V5yZCbeHAuwYS/7510c58c316eba68af73bfacadc3c0b2/DU_VS_animation.gif\" alt=\"\" width=\"80%\" /></p>\n<ol>\n<li>不同的模板</li>\n<li>手寫文件</li>\n<li>簽名文件</li>\n<li>勾選文件</li>\n<li>不整齊或被旋轉的掃描文件</li>\n<li>多樣的檔案格式</li>\n<li>低品質的掃描文件</li>\n</ol>\n<h2 id=\"uipath-communications-mining\"><a class=\"anchor\" href=\"#uipath-communications-mining\">#</a> UiPath Communications Mining</h2>\n<p>從發送電子郵件到回覆客戶請求。<br />\n在任何<strong>通訊管道</strong>上即時轉換為可操作的資料。<br />\n例如：辨識飯店名稱、房間類型和相關日期等資料，並將其輸入到自動化系統中。</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Tm3V4AWzlag?si=15VdabKP6vwUk7uH&amp;start=71\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<ol>\n<li><a href=\"https://www.uipath.com/blog/product-and-updates/introducing-generative-validation\">https://www.uipath.com/blog/product-and-updates/introducing-generative-validation</a></li>\n<li><a href=\"https://www.uipath.com/blog/automation/uipath-automation-coe-q3-fy24\">https://www.uipath.com/blog/automation/uipath-automation-coe-q3-fy24</a></li>\n<li><a href=\"https://www.uipath.com/blog/industry-solutions/british-airways-cathay-pacific-ai-powered-automation\">https://www.uipath.com/blog/industry-solutions/british-airways-cathay-pacific-ai-powered-automation</a></li>\n<li><a href=\"https://www.uipath.com/blog/ai/clipboard-ai-makes-finance-operations-easier\">https://www.uipath.com/blog/ai/clipboard-ai-makes-finance-operations-easier</a></li>\n<li><a href=\"https://www.uipath.com/product/communications-mining\">https://www.uipath.com/product/communications-mining</a></li>\n<li><a href=\"https://www.uipath.com/product/document-understanding\">https://www.uipath.com/product/document-understanding</a></li>\n</ol>\n",
            "tags": [
                "UiPath"
            ]
        },
        {
            "id": "https://blog.minz.li/shokaX/ShokaX%E6%8F%92%E4%BB%B6-%E6%B7%BB%E5%8A%A0Footer%E9%AB%98%E5%BA%A6/",
            "url": "https://blog.minz.li/shokaX/ShokaX%E6%8F%92%E4%BB%B6-%E6%B7%BB%E5%8A%A0Footer%E9%AB%98%E5%BA%A6/",
            "title": "ShokaX插件-增加Footer高度",
            "date_published": "2023-12-18T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>這是 Shoka 主題可能會出現的 bug，如果使用 ShokaX 可能不需要修改</p>\n</div>\n<p><img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/shokaFooterBug.webp\" alt=\"\" title=\"內容過少時向下滑動的顯示 BUG\" /></p>\n<ul>\n<li>解決方式</li>\n</ul>\n<ol>\n<li>添加隨機文章，來增加底部高度</li>\n</ol>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"><span>/_config.shoka.yml</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">widgets</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">random_posts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>添加  <code>min-height</code></li>\n</ol>\n<ul>\n<li>shoka 需要修改 styl 檔案</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>hexo-theme-shoka\\source\\css\\_common\\outline\\outline.styl</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">></span><span class=\"token punctuation\">.</span>inner <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> $content<span class=\"token operator\">-</span>desktop<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    align<span class=\"token operator\">-</span>items<span class=\"token operator\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span></pre></td></tr><tr class=\"marked\"><td data-num=\"4\"></td><td><pre>    min<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span> 100vh<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 新增此行</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">display</span><span class=\"token operator\">:</span> flex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    justify<span class=\"token operator\">-</span>content<span class=\"token operator\">:</span> space<span class=\"token operator\">-</span>between<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hexo<span class=\"token operator\">-</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sidebar.position'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr></table></figure><ul>\n<li>shokaX 插件</li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>/scripts/addFooterMinHeight.js</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'theme_inject'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">injects</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    injects<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'views/addFooterMinHeight.styl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>/views/addFooterMinHeight.styl</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token selector\">>.inner</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 90vh<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "ShokaX",
                "ShokaX插件"
            ]
        },
        {
            "id": "https://blog.minz.li/shokaX/ShokaX%E6%8F%92%E4%BB%B6-%E7%A7%BB%E9%99%A4%E9%A0%82%E9%83%A8%E9%9C%A7%E9%9D%A2%E6%95%88%E6%9E%9C/",
            "url": "https://blog.minz.li/shokaX/ShokaX%E6%8F%92%E4%BB%B6-%E7%A7%BB%E9%99%A4%E9%A0%82%E9%83%A8%E9%9C%A7%E9%9D%A2%E6%95%88%E6%9E%9C/",
            "title": "ShokaX插件-移除頂部模糊效果",
            "date_published": "2023-12-18T16:00:00.000Z",
            "content_html": "<p><img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/removeTopFrosted_before.png\" alt=\"\" title=\"移除前\" width=\"80%\" /><br />\n<img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/removeTopFrosted_after.png\" alt=\"\" title=\"移除後\" width=\"80%\" /></p>\n<ul>\n<li>並且在頂部以外的地方保留模糊效果<br />\n<img loading=\"lazy\" data-src=\"/assets/ShokaXPlugin/removeTopFrosted_other.jpg\" alt=\"\" title=\"頂部以外的地方保留模糊效果\" width=\"80%\" /></li>\n</ul>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>/scripts/removeTopBlur.js</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token string\">'theme_inject'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">injects</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    injects<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'views/removeTopBlur.styl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight css\"><figcaption data-lang=\"CSS\"><span>/views/removeTopBlur.styl</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">#nav</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">backdrop-filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">saturate</span><span class=\"token punctuation\">(</span>100%<span class=\"token punctuation\">)</span> <span class=\"token function\">blur</span><span class=\"token punctuation\">(</span>0px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token selector\">&amp;.show</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token property\">backdrop-filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">saturate</span><span class=\"token punctuation\">(</span>180%<span class=\"token punctuation\">)</span> <span class=\"token function\">blur</span><span class=\"token punctuation\">(</span>20px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "ShokaX插件"
            ]
        },
        {
            "id": "https://blog.minz.li/shokaX/ShokaX_modify/",
            "url": "https://blog.minz.li/shokaX/ShokaX_modify/",
            "title": "修改shokaX主題",
            "date_published": "2023-12-12T16:00:00.000Z",
            "content_html": "<h2 id=\"移除複製的版權聲明\"><a class=\"anchor\" href=\"#移除複製的版權聲明\">#</a> 移除複製的版權聲明</h2>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"><span>\\node_modules\\hexo-theme-shokax\\source\\js\\_app\\page\\post.js</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> htmlData <span class=\"token operator\">=</span> <span class=\"token comment\">/* author + '&lt;br>' + link + '&lt;br>' + license + '&lt;br>&lt;br>' + */</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\r\\n</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;br>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> textData <span class=\"token operator\">=</span> <span class=\"token comment\">/* author + '\\n' + link + '\\n' + license + '\\n\\n' + */</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getSelection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\r\\n</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>若要移除版權聲明，可以在文章的 md 檔加入  <code>copyright: false</code></li>\n</ul>\n<pre><code>title: 修改shokaX主題\ndate: 2023-12-13\ntags: ShokaX主題\ncategories: ShokaX主題\ncopyright: false\n---\n</code></pre>\n",
            "tags": [
                "ShokaX主題"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/OOP/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/OOP/",
            "title": "物件導向",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"call-by-value-傳值\"><a class=\"anchor\" href=\"#call-by-value-傳值\">#</a> call by value (傳值)</h1>\n<ul>\n<li>在 Call-by-Value 中，函式的參數是被傳遞值的<strong>副本</strong>。</li>\n<li>在函式內部，對參數的修改不會影響到原始的變數。</li>\n</ul>\n<div class=\"note info\">\n<h3 id=\"call-by-address-傳位置\"><a class=\"anchor\" href=\"#call-by-address-傳位置\">#</a> call by address (傳位置)</h3>\n<ul>\n<li>傳了實際的記憶體位置進去 function</li>\n<li>也是 <code>call by value</code>  的變形，但傳遞的是<strong>記憶體地址</strong>。</li>\n<li>在函式內部，通過指標可以修改原始變數的值。</li>\n</ul>\n</div>\n<h1 id=\"call-by-reference-傳參考\"><a class=\"anchor\" href=\"#call-by-reference-傳參考\">#</a> call by reference (傳參考)</h1>\n<ul>\n<li>在 Call-by-Reference 中，函式的參數接受原始變數的參考（或記憶體位置）。</li>\n<li>在函式內部，對參數的修改會直接影響到原始的變數。</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>範例 </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Call-by-Value (值傳遞)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">incrementByValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    value<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// Call-by-Reference using pointer (指標參考傳遞)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">incrementByPointer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span> ptr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// Call-by-Reference using reference (參考傳遞)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">incrementByReference</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> ref<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    ref<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">incrementByValue</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 傳遞值</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Call-by-Value: \"</span> <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 輸出：10</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token function\">incrementByPointer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 傳遞指標參考</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Call-by-Pointer: \"</span> <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 輸出：11</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token function\">incrementByReference</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 傳遞參考</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Call-by-Reference: \"</span> <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 輸出：12</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">傳值</th>\n<th style=\"text-align:center\">傳地址</th>\n<th style=\"text-align:center\">傳參考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"><code>incrementByValue</code></td>\n<td style=\"text-align:center\"><code>incrementByPointer</code></td>\n<td style=\"text-align:center\"><code>incrementByReference</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">傳入函式的東西</td>\n<td style=\"text-align:center\">整數值</td>\n<td style=\"text-align:center\">整數指標 (指標變數)</td>\n<td style=\"text-align:center\">整數引用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">原始的 <code>num</code></td>\n<td style=\"text-align:center\">不影響 (因為是副本)</td>\n<td style=\"text-align:center\">會影響</td>\n<td style=\"text-align:center\">會影響</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "物件導向"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1/",
            "title": "作業系統",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"race-condition-是什麼\"><a class=\"anchor\" href=\"#race-condition-是什麼\">#</a> Race Condition 是什麼？</h1>\n<p><strong>競爭條件 (Race Condition)</strong> 兩個或兩個以上的進程或線程在更改 <strong>共享資源 (Share Resource)</strong> 時會發生的情況。</p>\n<p>例如，假設我們有兩個 Process A 和 B，都想要訪問同一個共享變量。<br />\n如果 A 和 B 都嘗試在同一時間讀取和修改這個變量，那麼就<strong>可能</strong>會產生競爭條件。<br />\n如果沒有提供<strong>互斥存取</strong>，我們<strong>無法確定</strong> A 和 B 的執行順序，所以最終的結果可能會有所<strong>不同</strong>。</p>\n<p>解決方式:</p>\n<ul>\n<li>鎖 (Locks)</li>\n<li>原子變量 (Atomic Variables)</li>\n</ul>\n<h1 id=\"同步-synchronization\"><a class=\"anchor\" href=\"#同步-synchronization\">#</a> 同步 (Synchronization)</h1>\n<p>主要目的是確保多個進程訪問共享資源時不會互相干擾，並防止由於並發訪問而可能產生的數據不一致</p>\n<p>為了實現這一點，我們可以使用各種同步技術，</p>\n<ul>\n<li>信號量（semaphores）</li>\n<li>監視器（monitors）</li>\n<li>臨界區（critical sections）</li>\n</ul>\n<p>例如，有兩個進程 A 和 B，它們都想要訪問同一個共享變數 (share variable)。</p>\n<h2 id=\"信號量semaphores\"><a class=\"anchor\" href=\"#信號量semaphores\">#</a> 信號量（semaphores）</h2>\n<ul>\n<li>我們可以初始化一個信號量並將其設置為 1。</li>\n<li>當進程 A 想要訪問共享變量時，它會先減少信號量的值。</li>\n<li>如果信號量的值大於等於 0，那麼 A 可以繼續執行並訪問共享變量。</li>\n<li>否則，A 將被阻塞並等待。</li>\n<li>當 A 完成對共享變量的訪問後，它會增加信號量的值，這可能會喚醒等待的進程 B</li>\n</ul>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>信號量（semaphores）</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mutex semaphore <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 檢查 > 0 通過並 - 1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        臨界區程式碼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 離開時 + 1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        臨界區以外程式碼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"臨界區critical-sections\"><a class=\"anchor\" href=\"#臨界區critical-sections\">#</a> 臨界區（critical sections）</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>臨界區（critical sections）</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 臨界區指的是有使用共享變數之區塊</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">(</span>進入區段<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        臨界區程式碼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">(</span>離開區段<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        臨界區以外程式碼<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"process-和-thread\"><a class=\"anchor\" href=\"#process-和-thread\">#</a> Process 和 Thread</h1>\n<p><strong>程序 (Process)</strong> 和 <strong>線程 (Thread)</strong> 是兩種不同的執行實體，都是 CPU 調度和執行的基本單位。</p>\n<p><strong>Process</strong> 有 Process Control Block (PCB)。</p>\n<ol>\n<li>PID</li>\n<li>程式計數器 (Program counter)</li>\n<li>CPU 暫存器內容</li>\n<li>Stack</li>\n<li>Code 區段</li>\n<li>Data 區段</li>\n<li>Heap</li>\n</ol>\n<div class=\"note info\">\n<p><strong>Thread</strong> 是一個半進程，它有自己的堆疊並執行一段給定的代碼。<br>與真正的進程不同，<strong>線程通常與其他線程共享其記憶體</strong>。<br />\n包括 Code 區段、Data 區段、Heap 等。進程通常對每一個都有一個不同的記憶體區域，但進程中的多個線程共享同一個記憶體空間。一個進程可以有多個線程在運行。</p>\n</div>\n<p>例如，假設我們有一個文字處理器程式。<br />\n該程式可能有<strong>一個主 Process</strong> 負責管理用戶界面，<br />\n以及<strong>多個線程</strong>負責處理後台任務，如保存文件、檢查拼寫和語法等。</p>\n<h1 id=\"context-switch-是什麼\"><a class=\"anchor\" href=\"#context-switch-是什麼\">#</a> Context Switch 是什麼？</h1>\n<p><strong>Context Switch</strong>（上下文切換）是一種系統事件，使得單個 CPU 能夠被多個進程共享的重要機制，它允許作業系統在多個進程之間進行切換，使得每個進程都有機會使用 CPU 來完成其執行。</p>\n<div class=\"note info\">\n<p>例如，假設我們有兩個進程 A 和 B。<br />\nA 正在 CPU 上運行，而 B 在等待 CPU。當作業系統決定讓 B 運行時，它會進行上下文切換。</p>\n</div>\n<ol>\n<li>保存 A 的當前狀態（包括程序計數器、暫存器的值等），</li>\n<li>然後加載 B 的狀態並讓 B 運行。</li>\n<li>當要讓 A 再次運行時，作業系統會再次進行上下文切換，恢復 A 的狀態並讓 A 運行。</li>\n</ol>\n<h1 id=\"deadlock-需要滿足的-4-個條件\"><a class=\"anchor\" href=\"#deadlock-需要滿足的-4-個條件\">#</a> DeadLock 需要滿足的 4 個條件</h1>\n<ol>\n<li>Mutual exlusion（互斥存取） :<br />\n 資源不能被多個進程同時使用。</li>\n<li>Hold &amp; Wait（持有和等待）:<br />\n 一個 Process 持有至少一個資源，同時在等待獲取額外的資源，而該資源又被其他 Process 持有。</li>\n<li>No preemption（不搶佔） :<br />\n 已被持有的資源在進程使用完之前不能被強制奪取，除非該進程自願釋放資源。<br />\n如果系統可以強制奪取資源，就可以避免死結，但這可能會導致其他問題，如飢餓或優先權反轉。</li>\n<li>Circular wait（循環等待） :<br />\n 存在一個進程集合 {P1, P2, ..., PN}，其中 P1 正在等待 P2 持有的資源，P2 正在等待 P3 持有的資源，以此類推，最後 PN 正在等待 P1 持有的資源，形成一個循環等待的閉鎖環。</li>\n</ol>\n<p>這些條件是導致死結的必要條件，但不是充分條件。<br />\n也就是說，如果系統中存在這些條件，死結就有<strong>可能</strong>發生，但不一定會發生。</p>\n",
            "tags": [
                "大學課程"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E6%8E%92%E5%BA%8F%E6%BC%94%E7%AE%97%E6%B3%95/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E6%8E%92%E5%BA%8F%E6%BC%94%E7%AE%97%E6%B3%95/",
            "title": "排序演算法",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<ul>\n<li>stable sorting : 相同的值排序後順序皆一樣</li>\n<li>unstable sorting : 相同的值排序後順序可能會不一樣</li>\n</ul>\n<h1 id=\"初階排序\"><a class=\"anchor\" href=\"#初階排序\">#</a> 初階排序</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>排序演算法 </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Bubble Sort mark:3-4</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// Selection Sort</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 1. 先選這輪的最小</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 2. 跟 i 交換</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">selectionSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">int</span> minIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>minIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                minIndex <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>minIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">// Insertion Sort</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">// 1. 依序給這一輪的 value</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">// 2. value 跟前面的比</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 3. 放到完成的位置</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">insertionSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            j<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">// Bubble Sort</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Bubble Sort: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\">// Selection Sort</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token function\">selectionSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Selection Sort: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token comment\">// Insertion Sort</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token function\">insertionSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Insertion Sort: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"quick-sort\"><a class=\"anchor\" href=\"#quick-sort\">#</a> Quick sort</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 快速排序 (Quick Sort)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 最壞情況時間複雜度：O (n^2)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 平均情況時間複雜度：O (nlogn)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 最佳情況時間複雜度：O (nlogn)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> low<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span> pivot <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 選擇最後一個元素作為主元</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> low <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> low<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> high<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pivot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> arr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> low<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">&lt;</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">int</span> pivotIndex <span class=\"token operator\">=</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 遞迴地對分割後的子陣列進行排序</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> low<span class=\"token punctuation\">,</span> pivotIndex <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> pivotIndex <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">// 快速排序</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"快速排序結果：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在快速排序中，我們使用  <code>partition</code>  函式將陣列分割為比主元小和比主元大的兩個子陣列。<br />\n然後，我們遞迴地對這兩個子陣列進行排序，直到排序完成。</p>\n",
            "tags": [
                "程式碼"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E6%A9%9F%E7%8E%87%E8%88%87%E7%B5%B1%E8%A8%88/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E6%A9%9F%E7%8E%87%E8%88%87%E7%B5%B1%E8%A8%88/",
            "title": "機率與統計",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"互斥和獨立事件\"><a class=\"anchor\" href=\"#互斥和獨立事件\">#</a> 互斥和獨立事件</h1>\n<p><strong>互斥事件</strong>指的是兩個或多個事件不可能同時發生的情況。<br />\n如果事件 A 發生，那麼事件 B 就不可能發生，且反之亦然。</p>\n<p>數學上，兩個互斥事件 A 和 B 的概率滿足 P (A ∩ B) = 0，<strong>即它們的交集為空集</strong>。</p>\n<p>例如，擲一個骰子，事件 A 是出現奇數點數，事件 B 是出現偶數點數。<br />\n由於奇數和偶數是互斥的，因此在一次擲骰子的結果中，不能同時出現奇數和偶數。<br />\n因此，事件 A 和事件 B 是互斥事件。</p>\n<hr />\n<p><strong>獨立事件</strong>指的是兩個或多個事件的發生與其他事件的發生無關。<br />\n如果事件 A 發生與否<strong>不會影響</strong>事件 B 發生的概率。<br />\n數學上，獨立事件 A 和 B 滿足乘法規則： P (A ∩ B) = P (A) * P (B)。</p>\n<p>例如，考慮一個從一副撲克牌中抽取兩張牌的實驗，事件 A 是第一張牌是紅心❤️，事件 B 是第二張牌是黑桃 ♠️。<br />\n由於每次抽取牌都是獨立的，第一張牌是紅心不會影響第二張牌是黑桃的概率，反之亦然。因此，事件 A 和事件 B 是獨立事件。</p>\n<h1 id=\"骰1個骰子的期望值怎麼算\"><a class=\"anchor\" href=\"#骰1個骰子的期望值怎麼算\">#</a> 骰 1 個骰子的期望值怎麼算？</h1>\n<p>期望值是 相加所有 (出現的值 * 出現的機率)</p>\n<p>期望值 = (1 × 1/6) + (2 × 1/6) + (3 × 1/6) + (4 × 1/6) + (5 × 1/6) + (6 × 1/6) = 3.5</p>\n<details><summary>骰的次數越多總平均會接近期望值</summary><div>\n<p>期望值 3.5 表示在長期多次擲骰子的情況下，<br />\n擲骰子的平均結果將趨近於 3.5。</p>\n</div></details>\n<h1 id=\"三顆骰子一奇數二偶數的機率\"><a class=\"anchor\" href=\"#三顆骰子一奇數二偶數的機率\">#</a> 三顆骰子，一奇數二偶數的機率</h1>\n<p>現在，我們需要確定符合要求的<strong>組合數</strong>。我們希望有一顆骰子是奇數，而另外兩顆骰子是偶數。這種情況下，有三種可能性：</p>\n<ol>\n<li>奇數 - 偶數 - 偶數</li>\n<li>偶數 - 奇數 - 偶數</li>\n<li>偶數 - 偶數 - 奇數</li>\n</ol>\n<p>對於每種可能性，我們需要計算出每顆骰子的組合數。奇數有三種選擇（1、3、5），而偶數有三種選擇（2、4、6）。</p>\n<p>因此，根據組合計數的原理，我們可以計算滿足要求的組合數為：</p>\n<ol>\n<li>3 (奇數選擇) * 3 (偶數選擇) * 3 (偶數選擇) = 27</li>\n<li>3 (偶數選擇) * 3 (奇數選擇) * 3 (偶數選擇) = 27</li>\n<li>3 (偶數選擇) * 3 (偶數選擇) * 3 (奇數選擇) = 27</li>\n</ol>\n<p>接下來，我們需要考慮所有可能的組合數。<br />\n每顆骰子有六個點數，所以總共有 6 * 6 * 6 = 216 種組合。</p>\n<p>最後，我們可以計算機率，即符合要求的組合數除以所有可能的組合數：</p>\n<p>機率 = 符合要求的組合數 / 所有可能的組合數 = (27+27+27) / 216 = 3/8</p>\n<h1 id=\"有五個銅板有四個正面的機率是多少\"><a class=\"anchor\" href=\"#有五個銅板有四個正面的機率是多少\">#</a> 有五個銅板，有四個正面的機率是多少？</h1>\n<p>我們有五個銅板，每個銅板都有兩種可能的結果：正面和反面。<br />\n因此，總共有 2^5 = 32 種不同的組合。</p>\n<p>現在我們要計算有四個正面的組合數。在五個銅板中，選擇四個銅板出現正面，剩下的一個銅板出現反面。這種情況有 C (5, 4) = 5 種組合。</p>\n<p>每個符合條件的組合中，有四個銅板出現正面，一個銅板出現反面。<br />\n也就是 組合數 * (單個銅板出現正面的機率)^4 * (單個銅板出現反面的機率)^1</p>\n<p>所以，機率 = C (5, 4) * p^4 * (1-p)^1 = 5 * (1/2)^4 * (1/2)^1 = 5/32</p>\n<h1 id=\"pdf跟cdf是什麼\"><a class=\"anchor\" href=\"#pdf跟cdf是什麼\">#</a> PDF 跟 CDF 是什麼</h1>\n<ul>\n<li>概率密度函數（Probability Density Function, PDF）<br />\n<img loading=\"lazy\" data-src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Boxplot_vs_PDF.svg/1024px-Boxplot_vs_PDF.svg.png\"  height=\"300\"></li>\n</ul>\n<p>概率密度函數（PDF）用於描述連續隨機變量在不同<strong>取值點</strong>上的概率密度。<br />\n它可以看作是概率分布曲線的密度，通常是一個平滑的曲線。<br />\nPDF 的值代表了在特定取值點上的概率密度，即該點附近的概率密度值有多大。<br />\nPDF 的積分對應於在整個定義域上的概率，其積分值等於 1。</p>\n<ul>\n<li>累積分佈函數（Cumulative Distribution Function, CDF）<br />\n<img loading=\"lazy\" data-src=\"https://upload.wikimedia.org/wikipedia/commons/7/77/Exponential_distribution_cdf.png\"  height=\"300\"></li>\n</ul>\n<p>累積分佈函數（CDF）則用於描述<strong>隨機變量小於或等於給定值的概率</strong>。<br />\n它表示了隨機變量取值小於或等於某一特定值的概率。<br />\nCDF 是一個非遞減的函數，其值域在 0 到 1 之間。<br />\nCDF 的值在 x 處給出了小於或等於 x 的概率，即 F (x) = P (X ≤ x)。</p>\n<p><strong>CDF 是 PDF 的積分，也就是將 PDF 曲線下的面積進行累加。</strong></p>\n<h1 id=\"什麼是gaussian-function\"><a class=\"anchor\" href=\"#什麼是gaussian-function\">#</a> 什麼是 Gaussian function</h1>\n<p>高斯函數（Gaussian function）是一種數學函數，也稱為<strong>常態分佈函數</strong>（normal distribution function）或高斯分佈函數（Gaussian distribution function）。</p>\n<div class=\"note info\">\n<p>f(x) = A * exp(-(x - μ)² / (2σ²))</p>\n</div>\n<p>σ = 標準差<br />\n σ² = 變異數<br />\n在這個公式中，f (x) 是函數在 x 點的值，A 是幅度（或最大值），μ 是平均值，σ 是標準差，exp 是自然指數函數。</p>\n<p>高斯函數通常呈現一個對稱的鐘形曲線，其峰值位於平均值 μ 的位置。標準差 σ 確定了曲線的寬度，越大曲線越寬，越小曲線越窄。</p>\n<ol>\n<li>對稱性：曲線以平均值為中心對稱。</li>\n<li>唯一峰值：曲線有一個單一的最大值。</li>\n<li>平穩性：曲線在平均值兩側遞減，沒有突變或跳躍。</li>\n</ol>\n",
            "tags": [
                "機率與統計"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E6%BC%94%E7%AE%97%E6%B3%95/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E6%BC%94%E7%AE%97%E6%B3%95/",
            "title": "演算法",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"dp跟divide-and-conquer差在哪\"><a class=\"anchor\" href=\"#dp跟divide-and-conquer差在哪\">#</a> DP 跟 divide and conquer 差在哪</h1>\n<p><strong>分而治之法 (Divide and Conquer)</strong>  如果問題很大，我們就把問題<strong>分解成較小的子問題</strong>，然後分別解決這些子問題。一旦所有的子問題都解決了，我們就把所有子問題的解決方案組合起來，找到大問題的解決方案。分治法的限制是子問題應該與原問題屬於同一類型。例如，如果主要問題是排序，那麼子問題也應該是排序。分治法的策略本質上是遞迴的。</p>\n<p>動態規劃 (<strong>Dynamic Programming</strong>) 則是將優化問題分解成更簡單的子問題，並<strong>存儲</strong>每個子問題的解決方案，以便每個子問題只需要解決一次。一旦所有的子問題都解決了，我們就將每個子問題的結果連接起來，找到初始問題的解決方案。</p>\n<p>當我們看到一個遞迴解決方案對於相同的輸入有重複的調用時，我們可以使用動態規劃來優化它。</p>\n<p>這種方法的想法是簡單地<strong>存儲子問題</strong>的結果，這樣我們就不需要在以後需要時重新計算它們。</p>\n<p>例如，如果我們寫出斐波那契數列的簡單遞迴解決方案，我們會得到指數時間複雜度，如果我們通過存儲子問題的解決方案來優化它，時間複雜度就會從指數級<strong>降低到線性級</strong>。</p>\n<h1 id=\"quick-sort\"><a class=\"anchor\" href=\"#quick-sort\">#</a> Quick sort</h1>\n<p>快速排序（Quick Sort）是一種常用的排序算法，它通過選擇一個基準元素，將數列分割成兩個子數列，並將比基準元素小的元素放在基準元素的左邊，比基準元素大的元素放在基準元素的右邊，然後對子數列進行遞迴排序，最終實現整個數列的排序。</p>\n<p>下面是一個簡單的範例來說明快速排序的過程：</p>\n<p>假設我們要對數列 [7, 2, 1, 6, 8, 5, 3] 進行排序。</p>\n<ol>\n<li>選擇基準元素：從數列中選擇一個基準元素，通常選擇第一個或最後一個元素。在這個例子中，我們選擇第一個元素 7 作為基準元素。</li>\n<li>分割操作：將數列重新排列，小於基準元素的元素放在左邊，大於基準元素的元素放在右邊。在這個例子中，我們將小於 7 的元素放在左邊，大於 7 的元素放在右邊，得到 [2, 1, 6, 5, 3, 7, 8]。</li>\n<li>遞迴排序：對左右兩個子數列進行遞迴排序，重複上述步驟。在這個例子中，我們對左子數列 [2, 1, 6, 5, 3] 和右子數列 [8] 進行遞迴排序。</li>\n<li>合併結果：將排序後的左子數列、基準元素和排序後的右子數列合併在一起。在這個例子中，最終得到排序後的數列 [1, 2, 3, 5, 6, 7, 8]。</li>\n</ol>\n<p>總結：<br />\n快速排序通過選擇基準元素，將數列分割成兩個子數列，並對子數列進行遞迴排序，最終實現整個數列的排序。它的核心操作是分割，將小於基準元素的元素放在左邊，大於基準元素的元素放在右邊。快速排序是一種高效的排序算法，平均時間複雜度為 O (nlogn)，但在最壞情況下可能達到 O (n^2)。</p>\n",
            "tags": [
                "演算法"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E7%9F%A9%E9%99%A3%E9%A1%8C%E7%9B%AE/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E7%9F%A9%E9%99%A3%E9%A1%8C%E7%9B%AE/",
            "title": "矩陣程式題目",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"找出矩陣中第二大的數字\"><a class=\"anchor\" href=\"#找出矩陣中第二大的數字\">#</a> 找出矩陣中第二大的數字</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>找出矩陣中第二大的數字 </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;climits></span> <span class=\"token comment\">// 包含 INT_MIN 的定義</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">findSecondLargest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span> matrix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> largest <span class=\"token operator\">=</span> INT_MIN<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 最大數字</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> secondLargest <span class=\"token operator\">=</span> INT_MIN<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 第二大數字</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 遍歷矩陣，找出最大數字和第二大數字</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> row <span class=\"token operator\">:</span> matrix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> largest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                secondLargest <span class=\"token operator\">=</span> largest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                largest <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> secondLargest <span class=\"token operator\">&amp;&amp;</span> num <span class=\"token operator\">&lt;</span> largest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                secondLargest <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> secondLargest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">// 定義矩陣</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> matrix <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">// 呼叫函式找出第二大的數字</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">int</span> secondLargest <span class=\"token operator\">=</span> <span class=\"token function\">findSecondLargest</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">// 輸出結果</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>secondLargest <span class=\"token operator\">!=</span> INT_MIN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"矩陣中第二大的數字為: \"</span> <span class=\"token operator\">&lt;&lt;</span> secondLargest <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"矩陣中沒有第二大的數字\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"轉置矩陣\"><a class=\"anchor\" href=\"#轉置矩陣\">#</a> 轉置矩陣</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>轉置矩陣</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> MAX_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 定義矩陣的最大大小</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">transposeMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> matrix<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rows<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cols<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> transposedMatrix<span class=\"token punctuation\">[</span>MAX_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 用於儲存轉置後的矩陣</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 轉置矩陣</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> rows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> cols<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            transposedMatrix<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 列印轉置後的矩陣</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"轉置矩陣：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> cols<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> rows<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> transposedMatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">int</span> matrix<span class=\"token punctuation\">[</span>MAX_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 定義原始矩陣</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">int</span> rows<span class=\"token punctuation\">,</span> cols<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 矩陣的行數和列數</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// 輸入矩陣的行數和列數</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入矩陣的行數：\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    cin <span class=\"token operator\">>></span> rows<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入矩陣的列數：\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cin <span class=\"token operator\">>></span> cols<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">// 輸入矩陣元素</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入矩陣的元素：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> rows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> cols<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            cin <span class=\"token operator\">>></span> matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">// 計算並列印轉置矩陣</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token function\">transposeMatrix</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">,</span> rows<span class=\"token punctuation\">,</span> cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"兩個矩陣相乘\"><a class=\"anchor\" href=\"#兩個矩陣相乘\">#</a> 兩個矩陣相乘</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>兩個矩陣相乘</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 函式：矩陣相乘</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">matrixMultiply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span> matrix1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span> matrix2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> rows1 <span class=\"token operator\">=</span> matrix1<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 矩陣 1 的列數</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> cols1 <span class=\"token operator\">=</span> matrix1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 矩陣 1 的行數（矩陣 2 的列數）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span> rows2 <span class=\"token operator\">=</span> matrix2<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 矩陣 2 的列數</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">int</span> cols2 <span class=\"token operator\">=</span> matrix2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 矩陣 2 的行數</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 檢查矩陣是否可以相乘</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cols1 <span class=\"token operator\">!=</span> rows2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"矩陣的尺寸不符合乘法規則\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">vector</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 建立結果矩陣，初始化為全 0</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span>rows1<span class=\"token punctuation\">,</span> <span class=\"token generic-function\"><span class=\"token function\">vector</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>cols2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 進行矩陣相乘運算</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> rows1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> cols2<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> cols1<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> matrix1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix2<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// 定義兩個矩陣</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> matrix1 <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>swig￼<span class=\"token number\">0</span><span class=\"token operator\">--</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> matrix2 <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>swig￼<span class=\"token number\">1</span><span class=\"token operator\">--</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">// 呼叫矩陣相乘函式</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> result <span class=\"token operator\">=</span> <span class=\"token function\">matrixMultiply</span><span class=\"token punctuation\">(</span>matrix1<span class=\"token punctuation\">,</span> matrix2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// 輸出結果矩陣</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"矩陣相乘的結果：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> row <span class=\"token operator\">:</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> element <span class=\"token operator\">:</span> row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> element <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"矩陣乘向量\"><a class=\"anchor\" href=\"#矩陣乘向量\">#</a> 矩陣乘向量</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>矩陣乘向量</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 計算矩陣與向量的乘積</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span> <span class=\"token function\">matrixVectorMultiply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span> matrix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> vector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> rows <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> cols <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 檢查矩陣與向量的尺寸是否符合乘法規則</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cols <span class=\"token operator\">!=</span> vector<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"矩陣與向量的尺寸不符合乘法規則\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token generic-function\"><span class=\"token function\">vector</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 創建結果向量，初始化為零</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 進行矩陣與向量的乘法</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> rows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> cols<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> vector<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 測試程式碼</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\">// 定義矩陣</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">>></span> matrix <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>swig￼<span class=\"token number\">2</span><span class=\"token operator\">--</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// 定義向量</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span> vector <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">// 計算矩陣與向量的乘積</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span> result <span class=\"token operator\">=</span> <span class=\"token function\">matrixVectorMultiply</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">,</span> vector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">// 輸出結果</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"乘積結果：\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> value <span class=\"token operator\">:</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> value <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "程式碼"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E7%A8%8B%E5%BC%8F%E9%A1%8C%E7%9B%AE/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E7%A8%8B%E5%BC%8F%E9%A1%8C%E7%9B%AE/",
            "title": "程式題目",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"印星星\"><a class=\"anchor\" href=\"#印星星\">#</a> 印星星</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>印星星</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">printUpperTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"* \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">printLowerTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"* \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入行數: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    cin <span class=\"token operator\">>></span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"上三角形：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">printUpperTriangle</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"下三角形：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">printLowerTriangle</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"用遞迴寫階乘\"><a class=\"anchor\" href=\"#用遞迴寫階乘\">#</a> 用遞迴寫階乘</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>用遞迴寫階乘</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 定義遞迴函式計算階乘</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// Base case: 當 n 為 0 或 1 時，階乘為 1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 遞迴呼叫：將問題分解為較小的子問題</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 階乘 n 可以表示為 n 乘上 (n-1) 的階乘</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入一個正整數: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    cin <span class=\"token operator\">>></span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 呼叫遞迴函式計算階乘</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 的階乘是: \"</span> <span class=\"token operator\">&lt;&lt;</span> result <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"找出陣列中第二大的數字\"><a class=\"anchor\" href=\"#找出陣列中第二大的數字\">#</a> 找出陣列中第二大的數字</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>找出陣列中第二大的數字 </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">findSecondLargest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> largest <span class=\"token operator\">=</span> INT_MIN<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 初始化最大值為 int 類型的最小值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> secondLargest <span class=\"token operator\">=</span> INT_MIN<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 初始化第二大值為 int 類型的最小值</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 遍歷數組，更新最大值和第二大值</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> largest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            secondLargest <span class=\"token operator\">=</span> largest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            largest <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> secondLargest <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> largest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            secondLargest <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> secondLargest<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 範例數組</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 計算數組大小</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 調用函數找到第二大的數</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">int</span> secondLargest <span class=\"token operator\">=</span> <span class=\"token function\">findSecondLargest</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"第二大的數字是: \"</span> <span class=\"token operator\">&lt;&lt;</span> secondLargest <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"給定一數字找出因數\"><a class=\"anchor\" href=\"#給定一數字找出因數\">#</a> 給定一數字，找出因數</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>給定一數字，找出因數</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 找出給定數字的因數</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">findFactors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> factors<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 從 1 開始遍歷到 num 的平方根</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;=</span> num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            factors<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 將因數 i 加入 factors</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> num <span class=\"token operator\">/</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                factors<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">/</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 將因數 num/i 加入 factors</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> factors<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入一個正整數：\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    cin <span class=\"token operator\">>></span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> factors <span class=\"token operator\">=</span> <span class=\"token function\">findFactors</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 的因數有：\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> factor <span class=\"token operator\">:</span> factors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> factor <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"判斷質數\"><a class=\"anchor\" href=\"#判斷質數\">#</a> 判斷質數</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>判斷質數</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 判斷一個數字是否為質數</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> number<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 負數和小於等於 1 的數字不是質數</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 使用平方根的方法進行質數判斷</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 如果一個數字 n 是合數（非質數）</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">// 那麼它必定可以分解為兩個因數 a 和 b</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// 其中 a 和 b 都不大於 sqrt (n)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">int</span> sqrtNumber <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> sqrtNumber<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 如果沒有找到能整除 number 的數字，則 number 是質數</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// 測試程式碼</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">int</span> number<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入一個數字：\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    cin <span class=\"token operator\">>></span> number<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\">// 呼叫 isPrime 函式判斷是否為質數</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">bool</span> result <span class=\"token operator\">=</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">// 根據結果輸出訊息</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> number <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 是質數\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> number <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 不是質數\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"判斷子字串\"><a class=\"anchor\" href=\"#判斷子字串\">#</a> 判斷子字串</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>判斷子字串  </span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 判斷一個字串是否為另一個字串的子字串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">isSubstring</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> substring<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 如果子字串長度大於原始字串，則直接返回 false</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>substring<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 遍歷原始字串，逐個比較字元</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> substring<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">bool</span> isMatch <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 檢查子字串是否匹配</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> substring<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> substring<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                isMatch <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 如果子字串匹配，則返回 true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMatch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 沒有找到匹配的子字串，返回 false</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">// 測試程式碼</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    string str<span class=\"token punctuation\">,</span> substring<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入一個字串：\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>cin<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"請輸入一個子字串：\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>cin<span class=\"token punctuation\">,</span> substring<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">// 呼叫 isSubstring 函式判斷是否為子字串</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">bool</span> result <span class=\"token operator\">=</span> <span class=\"token function\">isSubstring</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> substring<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">// 根據結果輸出訊息</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> substring <span class=\"token operator\">&lt;&lt;</span>  <span class=\"token string\">\" 是 \"</span>  <span class=\"token operator\">&lt;&lt;</span> str <span class=\"token operator\">&lt;&lt;</span>  <span class=\"token string\">\"的子字串\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> substring <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 不是 \"</span> <span class=\"token operator\">&lt;&lt;</span> str <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" 的子字串 \"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>使用迴圈逐個比較字元的方式來實現。</li>\n</ul>\n<ol>\n<li>\n<p>檢查子字串的長度是否大於原始字串的長度，如果是，則直接返回 false，因為子字串不可能是原始字串的子字串。</p>\n</li>\n<li>\n<p>使用兩個嵌套的迴圈。外層迴圈遍歷原始字串，內層迴圈檢查從當前位置開始的子字串是否匹配。如果在內層迴圈中找到了不匹配的字元，則設置  <code>isMatch</code>  為 false，並且跳出內層迴圈。</p>\n</li>\n</ol>\n<h1 id=\"binary-search-tree\"><a class=\"anchor\" href=\"#binary-search-tree\">#</a> Binary Search Tree</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>二元搜尋樹</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 定義二元搜尋樹的節點結構</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Node</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Node<span class=\"token operator\">*</span> left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    Node<span class=\"token operator\">*</span> right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 節點的建構函式</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">Node</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        data <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        left <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        right <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 搜尋操作</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>Node<span class=\"token operator\">*</span> root<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 若樹為空則返回 false</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 若找到了目標值，則返回 true</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>data <span class=\"token operator\">==</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 若目標值比根節點的值小，則在左子樹中搜尋</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&lt;</span> root<span class=\"token operator\">-></span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>left<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">// 若目標值比根節點的值大，則在右子樹中搜尋</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>right<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">// 插入操作</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>Node<span class=\"token operator\">*</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>Node<span class=\"token operator\">*</span> root<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// 若樹為空，則創建一個新節點並返回</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token function\">Node</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">// 若目標值比根節點的值小，則插入左子樹中</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&lt;</span> root<span class=\"token operator\">-></span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        root<span class=\"token operator\">-></span>left <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>left<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">// 若目標值比根節點的值大，則插入右子樹中</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">></span> root<span class=\"token operator\">-></span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        root<span class=\"token operator\">-></span>right <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>right<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token comment\">// 若目標值等於根節點的值，不插入，直接返回根節點</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\">// 返回根節點</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">return</span> root<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">// 刪除操作</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>Node<span class=\"token operator\">*</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>Node<span class=\"token operator\">*</span> root<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">// 若樹為空，則返回空指針</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">return</span> root<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\">// 若目標值比根節點的值小，則在左子樹中刪除</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">&lt;</span> root<span class=\"token operator\">-></span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        root<span class=\"token operator\">-></span>left <span class=\"token operator\">=</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>left<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token comment\">// 若目標值比根節點的值大，則在右子樹中刪除</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">></span> root<span class=\"token operator\">-></span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        root<span class=\"token operator\">-></span>right <span class=\"token operator\">=</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>right<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token comment\">// 若找到了目標值</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token comment\">// 情況 1：沒有子節點或只有一個子節點</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>left <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            Node<span class=\"token operator\">*</span> temp <span class=\"token operator\">=</span> root<span class=\"token operator\">-></span>right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token keyword\">delete</span> root<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>right <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            Node<span class=\"token operator\">*</span> temp <span class=\"token operator\">=</span> root<span class=\"token operator\">-></span>left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token keyword\">delete</span> root<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token comment\">// 情況 2：有兩個子節點</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token comment\">// 找到右子樹中的最小值節點</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        Node<span class=\"token operator\">*</span> minNode <span class=\"token operator\">=</span> root<span class=\"token operator\">-></span>right<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>minNode<span class=\"token operator\">-></span>left <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            minNode <span class=\"token operator\">=</span> minNode<span class=\"token operator\">-></span>left<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token comment\">// 複製最小值到目標節點</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        root<span class=\"token operator\">-></span>data <span class=\"token operator\">=</span> minNode<span class=\"token operator\">-></span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token comment\">// 在右子樹中刪除最小值節點</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        root<span class=\"token operator\">-></span>right <span class=\"token operator\">=</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-></span>right<span class=\"token punctuation\">,</span> minNode<span class=\"token operator\">-></span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token comment\">// 返回修改後的根節點</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">return</span> root<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token comment\">// 測試程式碼</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token comment\">// 建立一個二元搜尋樹</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    Node<span class=\"token operator\">*</span> root <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token comment\">// 搜尋值 40</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"搜尋到值 40\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"未找到值 40\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token comment\">// 刪除值 30</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token comment\">// 搜尋值 30</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"搜尋到值 30\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"未找到值 30\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>我們使用  <code>struct</code>  定義了二元搜尋樹的節點結構，每個節點包含一個整數數據、左子樹指針和右子樹指針。</p>\n<ul>\n<li>\n<p><code>search</code>  函式實現了搜尋操作。它遞迴地在二元搜尋樹中搜尋目標值。如果樹為空則返回  <code>false</code> ，如果找到了目標值則返回  <code>true</code> ，否則根據目標值與根節點數據的比較結果遞迴地在左子樹或右子樹中搜尋。</p>\n</li>\n<li>\n<p><code>insert</code>  函式實現了插入操作。它遞迴地在二元搜尋樹中找到合適的位置插入新節點。如果樹為空則創建一個新節點，否則根據目標值與根節點數據的比較結果遞迴地在左子樹或右子樹中插入。如果目標值等於根節點的值，則不進行插入操作（忽略重複值）。</p>\n</li>\n<li>\n<p><code>remove</code>  函式實現了刪除操作。它遞迴地在二元搜尋樹中找到目標值所在的節點，並根據不同情況進行刪除。若目標節點沒有子節點或只有一個子節點，則直接刪除該節點並返回相應的子節點。若目標節點有兩個子節點，則找到右子樹中的最小值節點，將最小值複製到目標節點，然後在右子樹中刪除最小值節點。</p>\n</li>\n</ul>\n<p>在  <code>main</code>  函式中，插入了一些節點，然後使用  <code>search</code>  函式搜尋值 40，並根據結果輸出相應的訊息。<br />\n接著，我們刪除值 30 的節點，再次使用  <code>search</code>  函式搜尋值 30，並根據結果輸出相應的訊息。</p>\n",
            "tags": [
                "程式碼"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E7%B7%9A%E6%80%A7%E4%BB%A3%E6%95%B8/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E7%B7%9A%E6%80%A7%E4%BB%A3%E6%95%B8/",
            "title": "線性代數",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"求法向量\"><a class=\"anchor\" href=\"#求法向量\">#</a> 求法向量</h1>\n<p>要求一個平面或線的法向量，可以使用幾何或向量運算的方法。法向量是與該平面或線垂直的向量。</p>\n<p>以下是一個簡單的範例來說明如何求一個平面的法向量：</p>\n<p>考慮一個平面的一般方程式：ax + by + cz + d = 0</p>\n<p>根據這個方程式，我們可以觀察到，係數 a、b 和 c 對應於平面的法向量的 x、y 和 z 分量。</p>\n<p>因此，平面的法向量是 N = (a, b, c)。</p>\n<p>這樣，我們就找到了平面的法向量。</p>\n<h1 id=\"線性獨立\"><a class=\"anchor\" href=\"#線性獨立\">#</a> 線性獨立</h1>\n<p>在線性代數中，線性獨立是指一組向量或一組函數的集合，其中沒有一個向量或函數可以表示為其他向量或函數的線性組合。</p>\n<ul>\n<li>換句話說，如果一組向量或函數中的每個成員都 <code>無法由其他成員線性組出</code> ，則該組向量或函數是線性獨立的。</li>\n</ul>\n<p>以下是一個簡單的範例來說明線性獨立的概念：</p>\n<p>二維平面上的兩個向量 v₁ = (1, 0) 和 v₂ = (0, 1)。<br />\n這兩個向量分別表示 x 軸和 y 軸的單位向量，它們是正交的並且長度為 1。<br />\n且 v₁ 不能被 v₂ 組合而成，所以是線性獨立。</p>\n<p>現在有另一個向量 v₃ = (2, 3)。<br />\n假設存在標量 a 和 b，使得 av₁ + bv₂ = v₃。<br />\n將上述等式展開，我們可以得到以下方程組：<br />\na(1, 0) + b(0, 1) = (2, 3)<br />\n 將方程組分解為兩個方程：<br />\na = 2<br />\nb = 3<br />\n 因此，向量 v₃ 可以由向量 v₁ 和 v₂ 的線性組合表示，即 2v₁ + 3v₂ = v₃。<br />\n這組向量 {v₁, v₂, v₃} 是線性相關的，而不是線性獨立的。</p>\n<h1 id=\"餘弦相似\"><a class=\"anchor\" href=\"#餘弦相似\">#</a> 餘弦相似</h1>\n<p>餘弦相似（Cosine Similarity）是一種衡量兩個向量之間相似性的度量方法。<br />\n它基於餘弦定理，通過計算兩個向量之間的夾角來評估它們的相似度。</p>\n<p>餘弦相似的取值範圍在 -1 到 1 之間，<br />\n其中值越接近 1，表示兩個向量越相似，值越接近 -1，表示兩個向量越不相似，值為 0 表示兩個向量之間沒有相似性。</p>\n<p>以下是一個簡單的範例來說明餘弦相似的計算：</p>\n<p>假設有兩個二維向量 v₁ = (1, 2) 和 v₂ = (3, 4)。</p>\n<p>首先，計算這兩個向量的內積（dot product）：<br />\nv₁ · v₂ = (1 * 3) + (2 * 4) = 3 + 8 = 11</p>\n<p>接下來，計算每個向量的長度（歐幾里得範數）：<br />\n||v₁|| = √(1² + 2²) = √5 ≈ 2.236<br />\n||v₂|| = √(3² + 4²) = √25 = 5</p>\n<p>然後，計算餘弦相似度：<br />\nsimilarity = v₁ · v₂ / (||v₁|| * ||v₂||) = 11 / (2.236 * 5) ≈ 0.984</p>\n<p>從上述計算結果可以看出，這兩個向量的餘弦相似度約為 0.984，接近於 1，表示它們在方向上非常相似。</p>\n<div class=\"note info\">\n<p>餘弦相似性常用於文本相似度計算、推薦系統、資訊檢索等領域。</p>\n</div>\n<h1 id=\"一個方陣要怎麼求反矩陣\"><a class=\"anchor\" href=\"#一個方陣要怎麼求反矩陣\">#</a> 一個方陣要怎麼求反矩陣</h1>\n<ol>\n<li>高斯 - 喬登消去法（Gaussian-Jordan elimination）<br />\na. 將右邊放上基本矩陣<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>f</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>h</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>i</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>j</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\n\\begin{bmatrix}\n a &amp; b &amp; c &amp; 1 &amp; 0 &amp; 0 \\\\\n d &amp; f &amp; g &amp; 0 &amp; 1 &amp; 0 \\\\\n h &amp; i &amp; j &amp; 0 &amp; 0 &amp; 1 \n\\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></li>\n</ol>\n<ul>\n<li>b. 將左邊做列運算至基本矩陣<br />\n c. 可得右邊為反矩陣<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mo stretchy=\"false\" lspace=\"0em\" rspace=\"0em\">?</mo></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\">\n\\begin{bmatrix}\n  1 &amp; 0 &amp; 0 &amp; ? &amp; ? &amp; ? \\\\\n  0 &amp; 1 &amp; 0 &amp; ? &amp; ? &amp; ? \\\\\n  0 &amp; 0 &amp; 1 &amp; ? &amp; ? &amp; ? \n\\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.6em;vertical-align:-1.55em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span><span style=\"top:-1.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mclose\">?</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.05em;\"><span class=\"pstrut\" style=\"height:5.6em;\"></span><span style=\"width:0.667em;height:3.600em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0.667em\" height=\"3.600em\" viewBox=\"0 0 667 3600\"><path d=\"M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v0 v1759 h84z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55em;\"><span></span></span></span></span></span></span></span></span></span></span></li>\n<li></li>\n</ul>\n<ol start=\"2\">\n<li>矩陣的伴隨矩陣（adjugate matrix）。</li>\n</ol>\n<p>以下是一個簡單的範例來說明如何求一個方陣的反矩陣：</p>\n<details><summary>2x2的求法</summary><div>\n<p>考慮一個 2x2 的方陣 A：<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\nA =\n\\begin{bmatrix}\na &amp; b \\\\\nc &amp; d \n\\end{bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span></p>\n<p>首先，計算方陣 A 的行列式（determinant）：<br />\ndet(A) = ad - bc</p>\n<p>接下來，計算方陣 A 的伴隨矩陣（adjugate matrix） B：<br />\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>c</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\nB =\n\\begin{matrix}\nd &amp; -b \\\\\n-c &amp; a\n\\end{matrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>最後，計算反矩陣（inverse matrix） A⁻¹：<br />\nA⁻¹ = (1/det(A)) * B<br />\n= (1/(ad - bc)) * <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>c</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\n\\begin{matrix}\nd &amp; -b \\\\\n-c &amp; a\n\\end{matrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</div></details>\n",
            "tags": [
                "線性代數"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E8%B3%87%E6%96%99%E7%B5%90%E6%A7%8B/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E8%B3%87%E6%96%99%E7%B5%90%E6%A7%8B/",
            "title": "資料結構",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"circular-queue\"><a class=\"anchor\" href=\"#circular-queue\">#</a> Circular Queue</h1>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"><span>圖</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    A<span class=\"token text string\">[A]</span> <span class=\"token arrow operator\">--></span> B<span class=\"token text string\">[B]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    B <span class=\"token arrow operator\">--></span> C<span class=\"token text string\">[C]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    C <span class=\"token arrow operator\">--></span> D<span class=\"token text string\">[D]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    D <span class=\"token arrow operator\">--></span> A<span class=\"token text string\">[A]</span></pre></td></tr></table></figure><p>一般的隊列（Queue）:FIFO</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">Queue</th>\n<th style=\"text-align:center\">Circular Queue</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">資料排列方式</td>\n<td style=\"text-align:center\">線性順序排列</td>\n<td style=\"text-align:center\">循環順序排列，即將尾端和前端連接起來</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">插入和刪除操作</td>\n<td style=\"text-align:center\">刪除操作都在前端進行<br>插入操作都在尾端進行</td>\n<td style=\"text-align:center\">插入和刪除操作不固定<br>可以在任何位置進行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">記憶體空間</td>\n<td style=\"text-align:center\">更多</td>\n<td style=\"text-align:center\">較少</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">效率</td>\n<td style=\"text-align:center\">低</td>\n<td style=\"text-align:center\">高</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"dfs-and-bfs\"><a class=\"anchor\" href=\"#dfs-and-bfs\">#</a> DFS and BFS</h1>\n<p><strong>深度優先搜尋 (Depth-First Search, DFS)</strong></p>\n<p>深度優先搜尋 (DFS) 是一種用於搜尋圖或樹結構中所有頂點的遞迴演算法。<br />\n它會沿著一條路徑一直深入到不能再走為止，然後回溯並探索其他路徑。</p>\n<p>例如，假設我們有一個圖 G，其節點為 {0, 1, 2, 3}，邊為 {(0, 1), (0, 2), (1, 2), (2, 3)}。</p>\n<p>如果從節點 2 開始步驟如下：</p>\n<ol>\n<li>訪問節點 2<br />\n 我們首先訪問節點 2，並將其標記為已訪問。</li>\n<li>選擇並訪問一個相鄰的未訪問節點<br />\n從節點 2 的相鄰節點中選擇一個未訪問的節點（假設選擇節點 3），並訪問它。標記節點 3 為已訪問。</li>\n<li>繼續深入訪問節點 3 的相鄰未訪問節點<br />\n檢查節點 3 的相鄰節點，發現節點 3 沒有未訪問的相鄰節點，則回溯到節點 2。</li>\n<li>回溯並選擇另一個相鄰的未訪問節點<br />\n回到節點 2，選擇另一個相鄰的未訪問節點（節點 0），並訪問它。標記節點 0 為已訪問。</li>\n<li>深入訪問節點 0 的相鄰未訪問節點<br />\n檢查節點 0 的相鄰節點，發現節點 1 是未訪問的，於是訪問節點 1，並標記它為已訪問。</li>\n<li>繼續深入或回溯<br />\n檢查節點 1 的相鄰節點，發現節點 1 連接到的節點 2 已經被訪問，無其他未訪問節點，則回溯到節點 0，再回溯到節點 2。</li>\n<li>結束搜尋<br />\n當回溯到節點 2 且所有相鄰節點都已訪問時，深度優先搜尋結束。</li>\n</ol>\n<p><strong>廣度優先搜尋 (Breadth-First Search, BFS)</strong></p>\n<p>在 BFS 中，從起點節點開始，逐層地擴展搜索，先探索所有與起點節點相鄰的節點，然後再逐層探索與這些節點相鄰的節點，以此類推。</p>\n<p>BFS 使用一個稱為 ** 佇列（Queue）** 的資料結構來維護待處理的節點。</p>\n<ol>\n<li>將起點節點放入佇列中。</li>\n<li>從佇列中取出一個節點，將其標記為已訪問，並擴展搜索到該節點相鄰的未訪問節點，將這些節點加入佇列中。</li>\n</ol>\n<p><strong>重複</strong>這個過程，直到佇列中沒有未訪問的節點為止。</p>\n<p>BFS 的特點是以<strong>廣度</strong>作為搜索的優先順序。也就是說，BFS 先搜索距離起點節點最近的節點，然後再搜索稍遠一些的節點。這意味著，當使用 BFS 搜索時，可以找到從起點到目標節點的最短路徑（如果存在）。</p>\n<p>BFS 可以用在圖形算法、迷宮解決、最短路徑問題等。它確保在搜索過程中先處理較近的節點，因此通常用於找尋最短路徑或尋找圖形中的最短距離。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">DFS</th>\n<th style=\"text-align:center\">BFS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">使用的資料結構</td>\n<td style=\"text-align:center\">Stack</td>\n<td style=\"text-align:center\">Queue</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">順序</td>\n<td style=\"text-align:center\">不唯一 (若 vertex 從小到大拜訪則唯一)</td>\n<td style=\"text-align:center\">不唯一</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"雜湊函數-hash-function\"><a class=\"anchor\" href=\"#雜湊函數-hash-function\">#</a> 雜湊函數 (Hash Function)</h1>\n<p><strong>雜湊函數 (Hash Function)</strong> 是一種數學函數，它將任意大小的輸入數據（稱為<strong>資料</strong>）轉換為固定大小的輸出字串（稱為<strong>雜湊值</strong>）。</p>\n<p>例如我們將  <code>Hello World!</code>  的字串分別用 MD5、SHA1、SHA256<br />\nMD5:  <code>ed076287532e86365e841e92bfc50d8c</code> <br />\nSHA1:  <code>2ef7bde608ce5404e97d5f042f95f89f1c232871</code> <br />\nSHA256:  <code>7f83b1657ff1fc53b92dc18148a1d65dfc2d4b1fa3d677284addd200126d9069</code></p>\n<ul>\n<li>雜湊函數會希望是不可逆</li>\n<li>雜湊函數可能會有相同的情況（碰撞）</li>\n<li>原始資料有小變動，則希望雜湊值更大的變化（Avalanche Effect）</li>\n</ul>\n",
            "tags": [
                "資料結構"
            ]
        },
        {
            "id": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E9%9B%A2%E6%95%A3%E6%95%B8%E5%AD%B8/",
            "url": "https://blog.minz.li/%E9%9D%A2%E8%A9%A6%E9%A1%8C%E7%9B%AE/%E9%9B%A2%E6%95%A3%E6%95%B8%E5%AD%B8/",
            "title": "離散數學",
            "date_published": "2023-11-01T16:00:00.000Z",
            "content_html": "<h1 id=\"背包問題\"><a class=\"anchor\" href=\"#背包問題\">#</a> 背包問題</h1>\n<p>背包問題（Knapsack Problem）是一個經典的優化問題，屬於組合優化問題的一種，有一個固定容量的背包和一組具有不同價值和重量的物品，我們需要在限制背包容量的條件下，選擇最佳的物品組合，使得<strong>總價值最大化</strong>，可以使用<strong>動態規劃</strong>、<strong>貪婪算法</strong>來找到最佳解。</p>\n<p>背包問題可以分為兩種主要的變體：</p>\n<ol>\n<li>0/1 背包問題（0/1 Knapsack Problem）：每個物品要麼全部放入背包，要麼完全不放入背包，<strong>無法將物品分割</strong>為部分放入。</li>\n<li>分數背包問題（Fractional Knapsack Problem）：每個物品<strong>可以按比例分割</strong>，可以將物品的一部分放入背包。</li>\n</ol>\n<p>假設有一個可放入總重量為 10 的背包，我們有以下物品可供選擇：</p>\n<ul>\n<li>物品 1：價值 60，重量 4，價值 / 重量 = 15</li>\n<li>物品 2：價值 80，重量 5，價值 / 重量 = 16</li>\n<li>物品 3：價值 100，重量 8，價值 / 重量 = 12.5</li>\n</ul>\n<ol>\n<li>0/1 背包問題：</li>\n</ol>\n<p>最佳的物品組合是將物品 2 和物品 1 放入背包，總價值為 140。</p>\n<ol start=\"2\">\n<li>分數背包問題：</li>\n</ol>\n<p>最佳的物品組合是將物品 2 和物品 1 完全放入背包，物品 3 的一部分（重量為 1）放入背包，總價值為 152.5。<br />\n這是因為物品 2 的價值重量比最高，而物品 1 的價值重量比次之，物品 3 的價值重量比最低，<br />\n因此我們先選取物品 2 和物品 1，再選取物品 3 的一部分。</p>\n<h1 id=\"尤拉函數\"><a class=\"anchor\" href=\"#尤拉函數\">#</a> 尤拉函數</h1>\n<p>尤拉函數（Euler's function），也稱為歐拉函數或歐拉 φ 函數。</p>\n<ul>\n<li>用來計算小於或等於給定正整數的自然數中與該正整數 <code>互質</code> 的數的個數。</li>\n</ul>\n<p>尤拉函數的符號表示為 φ(n)，其中 n 是一個正整數。<br />\n尤拉函數的計算方法基於歐拉定理，它指出若 a 和 n 是互質的正整數，則 a 的尤拉函數值 φ(n) 等於小於或等於 n 的正整數中與 n 互質的數的個數。</p>\n<p>範例：</p>\n<p>假設我們要計算 φ(8)。首先，列出小於或等於 8 的正整數：1、2、3、4、5、6、7、8。<br />\n然後，我們找出與 8 互質的數，即與 8 沒有共同因數的數。<br />\n在這個例子中，與 8 互質的數有：1、3、5、7。因此，φ(8) = 4，表示小於或等於 8 的正整數中，有 4 個與 8 互質的數。</p>\n",
            "tags": [
                "離散數學"
            ]
        }
    ]
}